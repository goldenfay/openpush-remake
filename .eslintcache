[{"C:\\Users\\PC\\Desktop\\biapi openpush remake\\openpush-remake\\src\\index.js":"1","C:\\Users\\PC\\Desktop\\biapi openpush remake\\openpush-remake\\src\\reportWebVitals.js":"2","C:\\Users\\PC\\Desktop\\biapi openpush remake\\openpush-remake\\src\\App.js":"3","C:\\Users\\PC\\Desktop\\biapi openpush remake\\openpush-remake\\src\\pages\\main\\index.js":"4","C:\\Users\\PC\\Desktop\\biapi openpush remake\\openpush-remake\\src\\pages\\main\\main.js":"5","C:\\Users\\PC\\Desktop\\biapi openpush remake\\openpush-remake\\src\\components\\AppBar.js":"6","C:\\Users\\PC\\Desktop\\biapi openpush remake\\openpush-remake\\src\\router.js":"7","C:\\Users\\PC\\Desktop\\biapi openpush remake\\openpush-remake\\src\\pages\\main\\components\\ProductionsCarousel.js":"8","C:\\Users\\PC\\Desktop\\biapi openpush remake\\openpush-remake\\src\\pages\\main\\components\\Categories.js":"9","C:\\Users\\PC\\Desktop\\biapi openpush remake\\openpush-remake\\src\\components\\CustomCard.js":"10","C:\\Users\\PC\\Desktop\\biapi openpush remake\\openpush-remake\\src\\components\\ProductCard.js":"11","C:\\Users\\PC\\Desktop\\biapi openpush remake\\openpush-remake\\src\\components\\Footer.js":"12","C:\\Users\\PC\\Desktop\\biapi openpush remake\\openpush-remake\\src\\components\\CustomModal.js":"13","C:\\Users\\PC\\Desktop\\biapi openpush remake\\openpush-remake\\src\\pages\\auth\\Login.js":"14","C:\\Users\\PC\\Desktop\\biapi openpush remake\\openpush-remake\\src\\pages\\auth\\Register.js":"15","C:\\Users\\PC\\Desktop\\biapi openpush remake\\openpush-remake\\src\\pages\\wallet\\index.js":"16","C:\\Users\\PC\\Desktop\\biapi openpush remake\\openpush-remake\\src\\pages\\wallet\\wallet.js":"17","C:\\Users\\PC\\Desktop\\biapi openpush remake\\openpush-remake\\src\\components\\SocialMediaFooter.js":"18","C:\\Users\\PC\\Desktop\\biapi openpush remake\\openpush-remake\\src\\pages\\wallet\\FortuneWheel.js":"19","C:\\Users\\PC\\Desktop\\biapi openpush remake\\openpush-remake\\src\\pages\\buy\\index.js":"20","C:\\Users\\PC\\Desktop\\biapi openpush remake\\openpush-remake\\src\\pages\\buy\\BuyProduct.js":"21","C:\\Users\\PC\\Desktop\\biapi openpush remake\\openpush-remake\\src\\themes\\success-fail.js":"22","C:\\Users\\PC\\Desktop\\biapi openpush remake\\openpush-remake\\src\\components\\TabPanel.js":"23","C:\\Users\\PC\\Desktop\\biapi openpush remake\\openpush-remake\\src\\pages\\buy\\components\\ActivationQR.js":"24","C:\\Users\\PC\\Desktop\\biapi openpush remake\\openpush-remake\\src\\components\\FluidImage.js":"25","C:\\Users\\PC\\Desktop\\biapi openpush remake\\openpush-remake\\src\\pages\\buy\\components\\MissingRabbits.js":"26","C:\\Users\\PC\\Desktop\\biapi openpush remake\\openpush-remake\\src\\pages\\buy\\components\\RedeemProduct.js":"27","C:\\Users\\PC\\Desktop\\biapi openpush remake\\openpush-remake\\src\\pages\\profile\\index.js":"28","C:\\Users\\PC\\Desktop\\biapi openpush remake\\openpush-remake\\src\\pages\\profile\\large\\index.js":"29","C:\\Users\\PC\\Desktop\\biapi openpush remake\\openpush-remake\\src\\pages\\profile\\small\\index.js":"30","C:\\Users\\PC\\Desktop\\biapi openpush remake\\openpush-remake\\src\\pages\\profile\\small\\Main.js":"31","C:\\Users\\PC\\Desktop\\biapi openpush remake\\openpush-remake\\src\\components\\Avatar.js":"32","C:\\Users\\PC\\Desktop\\biapi openpush remake\\openpush-remake\\src\\pages\\profile\\menu.js":"33","C:\\Users\\PC\\Desktop\\biapi openpush remake\\openpush-remake\\src\\pages\\profile\\EditProfile.js":"34","C:\\Users\\PC\\Desktop\\biapi openpush remake\\openpush-remake\\src\\pages\\profile\\UpgradeLevel.js":"35","C:\\Users\\PC\\Desktop\\biapi openpush remake\\openpush-remake\\src\\pages\\profile\\SocialConnection.js":"36","C:\\Users\\PC\\Desktop\\biapi openpush remake\\openpush-remake\\src\\pages\\profile\\Settings.js":"37","C:\\Users\\PC\\Desktop\\biapi openpush remake\\openpush-remake\\src\\components\\SimpleRadio.js":"38","C:\\Users\\PC\\Desktop\\biapi openpush remake\\openpush-remake\\src\\pages\\FAQ.js":"39","C:\\Users\\PC\\Desktop\\biapi openpush remake\\openpush-remake\\src\\pages\\navbar\\auth-top-bar.js":"40","C:\\Users\\PC\\Desktop\\biapi openpush remake\\openpush-remake\\src\\components\\NavTabs.js":"41","C:\\Users\\PC\\Desktop\\biapi openpush remake\\openpush-remake\\src\\static\\nav.js":"42","C:\\Users\\PC\\Desktop\\biapi openpush remake\\openpush-remake\\src\\redux\\store.js":"43","C:\\Users\\PC\\Desktop\\biapi openpush remake\\openpush-remake\\src\\redux\\reducers\\index.js":"44","C:\\Users\\PC\\Desktop\\biapi openpush remake\\openpush-remake\\src\\redux\\reducers\\user.js":"45","C:\\Users\\PC\\Desktop\\biapi openpush remake\\openpush-remake\\src\\data\\user.js":"46","C:\\Users\\PC\\Desktop\\biapi openpush remake\\openpush-remake\\src\\redux\\actions\\user-actions.js":"47"},{"size":500,"mtime":499162500000,"results":"48","hashOfConfig":"49"},{"size":362,"mtime":499162500000,"results":"50","hashOfConfig":"49"},{"size":1229,"mtime":1609708634169,"results":"51","hashOfConfig":"49"},{"size":1763,"mtime":1609710315059,"results":"52","hashOfConfig":"49"},{"size":1560,"mtime":1609540947685,"results":"53","hashOfConfig":"49"},{"size":1920,"mtime":1609700537876,"results":"54","hashOfConfig":"49"},{"size":2335,"mtime":1609706539168,"results":"55","hashOfConfig":"49"},{"size":1909,"mtime":1609596469520,"results":"56","hashOfConfig":"49"},{"size":4850,"mtime":1609592465105,"results":"57","hashOfConfig":"49"},{"size":1972,"mtime":1609524379998,"results":"58","hashOfConfig":"49"},{"size":3185,"mtime":1609574696861,"results":"59","hashOfConfig":"49"},{"size":2074,"mtime":1609708517892,"results":"60","hashOfConfig":"49"},{"size":2662,"mtime":1609608531494,"results":"61","hashOfConfig":"49"},{"size":4801,"mtime":1609709845849,"results":"62","hashOfConfig":"49"},{"size":3665,"mtime":1609537991923,"results":"63","hashOfConfig":"49"},{"size":115,"mtime":1609574808648,"results":"64","hashOfConfig":"49"},{"size":3963,"mtime":1609540571730,"results":"65","hashOfConfig":"49"},{"size":1450,"mtime":1609706911602,"results":"66","hashOfConfig":"49"},{"size":7034,"mtime":1609689041095,"results":"67","hashOfConfig":"49"},{"size":1482,"mtime":1609603353147,"results":"68","hashOfConfig":"49"},{"size":8460,"mtime":1609608613822,"results":"69","hashOfConfig":"49"},{"size":230,"mtime":1609591658498,"results":"70","hashOfConfig":"49"},{"size":564,"mtime":1609592465105,"results":"71","hashOfConfig":"49"},{"size":4286,"mtime":1609689728439,"results":"72","hashOfConfig":"49"},{"size":763,"mtime":1609599483410,"results":"73","hashOfConfig":"49"},{"size":2423,"mtime":1609605337673,"results":"74","hashOfConfig":"49"},{"size":1799,"mtime":1609609037731,"results":"75","hashOfConfig":"49"},{"size":116,"mtime":1609614369933,"results":"76","hashOfConfig":"49"},{"size":2379,"mtime":1609706310603,"results":"77","hashOfConfig":"49"},{"size":293,"mtime":1609706539168,"results":"78","hashOfConfig":"49"},{"size":2594,"mtime":1609706417495,"results":"79","hashOfConfig":"49"},{"size":2604,"mtime":1609627099662,"results":"80","hashOfConfig":"49"},{"size":1353,"mtime":1609711061465,"results":"81","hashOfConfig":"49"},{"size":5772,"mtime":1609711017394,"results":"82","hashOfConfig":"49"},{"size":12013,"mtime":1609670326473,"results":"83","hashOfConfig":"49"},{"size":4623,"mtime":1609675042042,"results":"84","hashOfConfig":"49"},{"size":4832,"mtime":1609684042234,"results":"85","hashOfConfig":"49"},{"size":1299,"mtime":1609689728439,"results":"86","hashOfConfig":"49"},{"size":5464,"mtime":1609711176922,"results":"87","hashOfConfig":"49"},{"size":2814,"mtime":1609710878659,"results":"88","hashOfConfig":"49"},{"size":1642,"mtime":1609710852772,"results":"89","hashOfConfig":"49"},{"size":367,"mtime":1609706145490,"results":"90","hashOfConfig":"49"},{"size":195,"mtime":1609708655433,"results":"91","hashOfConfig":"49"},{"size":150,"mtime":1609709947336,"results":"92","hashOfConfig":"49"},{"size":354,"mtime":1609709622336,"results":"93","hashOfConfig":"49"},{"size":116,"mtime":1609709622341,"results":"94","hashOfConfig":"49"},{"size":156,"mtime":1609709622334,"results":"95","hashOfConfig":"49"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},"sg0wou",{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"98"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"98"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"98"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"98"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"98"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"98"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"98"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"98"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"98"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"98"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"98"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158","usedDeprecatedRules":"98"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161","usedDeprecatedRules":"98"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"168","usedDeprecatedRules":"98"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"171","usedDeprecatedRules":"98"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"174","usedDeprecatedRules":"98"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"181","usedDeprecatedRules":"98"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"184","usedDeprecatedRules":"98"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"187","usedDeprecatedRules":"98"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"190","usedDeprecatedRules":"98"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"195","usedDeprecatedRules":"98"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"198","usedDeprecatedRules":"98"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"201","usedDeprecatedRules":"98"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"204","messages":"205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},"C:\\Users\\PC\\Desktop\\biapi openpush remake\\openpush-remake\\src\\index.js",[],["214","215"],"C:\\Users\\PC\\Desktop\\biapi openpush remake\\openpush-remake\\src\\reportWebVitals.js",[],"C:\\Users\\PC\\Desktop\\biapi openpush remake\\openpush-remake\\src\\App.js",["216"],"import React from 'react';\nimport { Provider } from \"react-redux\";\nimport './App.css';\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\nimport { createMuiTheme, ThemeProvider } from \"@material-ui/core/styles\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\n\nimport store from './redux/store'\nimport Router from './router';\n  //Pages\n\nfunction App() {\n\n  const prefersDarkMode = useMediaQuery(\"(prefers-color-scheme: dark)\");\n\n  const theme = React.useMemo(\n    () =>\n      createMuiTheme({\n        palette: {\n          type: \"dark\",\n          primary: {\n            main: \"#23222c\",\n            light: \"#33323B\",\n            ultraLight: \"#807F85\"\n            \n          },\n          secondary: {\n            main: \"#ED1C24\",\n\n          },\n          success: {\n            main: \"#44B91B\",\n          },\n        },\n        breakpoints: {\n          values: {\n            xs: 0,\n            sm: 600,\n            md: 768,\n            lg: 1280,\n            xl: 1920,\n          },\n        },\n      }),\n    [prefersDarkMode]\n  );\n  return (\n    <ThemeProvider theme={theme}>\n      <Provider store={store}>\n        <CssBaseline/>\n        <Router/>\n\n      </Provider>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","C:\\Users\\PC\\Desktop\\biapi openpush remake\\openpush-remake\\src\\pages\\main\\index.js",[],"C:\\Users\\PC\\Desktop\\biapi openpush remake\\openpush-remake\\src\\pages\\main\\main.js",[],"C:\\Users\\PC\\Desktop\\biapi openpush remake\\openpush-remake\\src\\components\\AppBar.js",["217"],"import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport {\r\n  AppBar as TopBar,\r\n  Toolbar,\r\n  Typography,\r\n  Button,\r\n  IconButton,\r\n} from \"@material-ui/core\";\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { useState } from \"react\";\r\n// Component\r\nimport CustomModal from './CustomModal';\r\nimport Login from '../pages/auth/Login';\r\nimport Register from '../pages/auth/Register';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n}));\r\n\r\nfunction AppBar(props) {\r\n  const classes = useStyles();\r\n\r\n  const [open,setOpen]=useState(false);\r\n  const [page,setPage]=useState(<Login/>);\r\n  const displayAuthPage=(page)=>{\r\n    if(page===\"login\") setPage(<Login/>); else setPage(<Register/>)\r\n    setOpen(true);\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <TopBar position=\"static\">\r\n        <Toolbar>\r\n          <IconButton\r\n            edge=\"start\"\r\n            className={classes.menuButton}\r\n            color=\"inherit\"\r\n            aria-label=\"menu\"\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <div  className={classes.title}>\r\n            <img src=\"/assets/imgs/toolbar_logo.png\" alt=\"\"/>\r\n          </div>\r\n\r\n          {props.children}\r\n\r\n          <Typography  className={classes.menuButton} component={Button} onClick={()=>displayAuthPage('login')}>\r\n            Login\r\n          </Typography>\r\n          <Button color=\"secondary\" variant=\"contained\" onClick={()=>displayAuthPage('register')} >\r\n            Register\r\n          </Button>\r\n        </Toolbar>\r\n      </TopBar>\r\n      <CustomModal \r\n      body={page}\r\n      open={open}\r\n      handleClose={()=>setOpen(false)}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nAppBar.propTypes = {};\r\n\r\nexport default AppBar;\r\n","C:\\Users\\PC\\Desktop\\biapi openpush remake\\openpush-remake\\src\\router.js",[],"C:\\Users\\PC\\Desktop\\biapi openpush remake\\openpush-remake\\src\\pages\\main\\components\\ProductionsCarousel.js",[],"C:\\Users\\PC\\Desktop\\biapi openpush remake\\openpush-remake\\src\\pages\\main\\components\\Categories.js",["218","219"],"import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport {\r\n  Grid,\r\n  Box,\r\n  Typography,\r\n  TextField,\r\n  Link,\r\n  IconButton,\r\n  Button,\r\n  Tabs,\r\n  Tab,\r\n} from \"@material-ui/core\";\r\nimport FilterListIcon from \"@material-ui/icons/FilterList\";\r\nimport { useState } from \"react\";\r\n\r\n// Components\r\nimport CustomCard from \"../../../components/CustomCard\";\r\nimport ProductCard from \"../../../components/ProductCard\";\r\nimport TabPanel from \"../../../components/TabPanel\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  bglight: {\r\n    backgroundColor: theme.palette.primary.light,\r\n  },\r\n}));\r\n\r\n\r\nconst tabprops = (index) => {\r\n  return {\r\n    id: `wrapped-tab-${index}`,\r\n    \"aria-controls\": `wrapped-tabpanel-${index}`,\r\n  };\r\n};\r\n\r\nconst tabTitles = [\"All\", \"Food & Drins\", \"Health & Beauty\", \"Sport\"];\r\nconst instructions = [\r\n  \"Redeem your ticket for 0 Rabbits\",\r\n  \"Go to your favourite supermarket and spent minimum 25 leva on Groceries\",\r\n  \"Activate your golden ticket\",\r\n  \"Take a picture of your bill within 2 hours of purchase (maximum once a day) to enter the Tombola\",\r\n];\r\n\r\nfunction Categories(props) {\r\n  const classes = useStyles();\r\n\r\n  const [currentTab, setCurrentTab] = useState(tabTitles[0]);\r\n  const [showMapView, setShowMapView] = useState(false);\r\n\r\n  const handleChange = (e, val) => {\r\n    setCurrentTab(val);\r\n  };\r\n  return (\r\n    <Grid container direction=\"column\" spacing={2}>\r\n      <Grid item xs>\r\n        <Box\r\n          display=\"flex\"\r\n          flexDirection=\"row\"\r\n          justifyContent=\"space-between\"\r\n          alignItems=\"center\"\r\n        >\r\n          <Typography component=\"span\" variant=\"h5\">Categories</Typography>\r\n          <Link href={\"#\"} underline=\"none\" color=\"inherit\" component=\"button\" onClick={()=>setShowMapView(!showMapView)}>\r\n            <Typography component=\"span\" variant=\"caption\">Show on map</Typography>\r\n          </Link>\r\n        </Box>\r\n      </Grid>\r\n      <Grid item xs container direction=\"row\">\r\n        <Grid item xs={10}>\r\n          <TextField\r\n            fullWidth\r\n            id=\"filled-search\"\r\n            label=\"Search\"\r\n            type=\"search\"\r\n            variant=\"filled\"\r\n          />\r\n        </Grid>\r\n        <Grid item xs={2} container justify=\"center\">\r\n          <Button className={classes.bglight}>\r\n            <FilterListIcon />\r\n          </Button>\r\n        </Grid>\r\n      </Grid>\r\n      <Grid item xs container>\r\n        <Grid item xs>\r\n          <Tabs\r\n            value={currentTab}\r\n            onChange={handleChange}\r\n            indicatorColor=\"secondary\"\r\n            variant=\"fullWidth\"\r\n            aria-label=\"categories filters tabs\"\r\n          >\r\n            {tabTitles.map((el, idx) => (\r\n              <Tab key={idx} value={el} label={el} {...tabprops(el)} />\r\n            ))}\r\n          </Tabs>\r\n        </Grid>\r\n      </Grid>\r\n\r\n      {!showMapView &&\r\n      <Grid container justify=\"center\">\r\n        <TabPanel value={currentTab} index=\"All\">\r\n          <Grid container spacing={2}>\r\n            <Grid item sm={12} md={6} lg={4} >\r\n              {/* Instructions */}\r\n              <CustomCard\r\n                title=\"Instruction\"\r\n                withMoreAction\r\n                body={\r\n                  <ol>\r\n                    {instructions.map((inst, index) => (\r\n                      <li key={index}>{inst}</li>\r\n                    ))}{\" \"}\r\n                  </ol>\r\n                }\r\n                actions={\r\n                  // <ThemeProvider theme={}>\r\n                  <Button fullWidth color=\"primary\" variant=\"contained\">\r\n                    {\" \"}\r\n                    <Typography color=\"textPrimary\">Redeem product</Typography> \r\n                  </Button>\r\n\r\n                  // </ThemeProvider>\r\n                }\r\n              />\r\n            </Grid>\r\n            {[1, 2, 3, 4, 5]\r\n              .map(\r\n                (el) =>\r\n                  \"Voucher for Burger King BGN Foodpanda Voucher For All Users\"\r\n              )\r\n              .map((title,idx) => (\r\n                <Grid key={idx} item sm={12} md={6} lg={4}>\r\n                  <ProductCard\r\n                    withMoreAction\r\n                    title={title}\r\n                    subheader={title}\r\n                    price={Math.random() * 100000}\r\n                    image=\"/assets/dummy/main/burger_king.png\"\r\n                  />\r\n                </Grid>\r\n              ))}\r\n          </Grid>\r\n        </TabPanel>\r\n        <TabPanel value={currentTab} index=\"Food & Drinks\">\r\n          Item two\r\n        </TabPanel>\r\n        <TabPanel value={currentTab} index=\"Health & Beauty\">\r\n          Item three\r\n        </TabPanel>\r\n      </Grid>}\r\n    </Grid>\r\n  );\r\n}\r\n\r\nCategories.propTypes = {};\r\n\r\nexport default Categories;\r\n","C:\\Users\\PC\\Desktop\\biapi openpush remake\\openpush-remake\\src\\components\\CustomCard.js",[],"C:\\Users\\PC\\Desktop\\biapi openpush remake\\openpush-remake\\src\\components\\ProductCard.js",[],"C:\\Users\\PC\\Desktop\\biapi openpush remake\\openpush-remake\\src\\components\\Footer.js",["220"],"import React from 'react'\r\nimport {Link as BrowserLink} from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport {Grid,Link,Typography  } from \"@material-ui/core\";\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    footer: {\r\n        // backgroundColor: theme.palette.primary.main,\r\n        // height: \"100%\"\r\n\r\n    },\r\n    link: {\r\n      textTransform: \"capitalize\",\r\n      color: \"white\",\r\n      display: \"flex\",\r\n      margin: theme.spacing(1),\r\n      '&.active':{\r\n          color: theme.palette.secondary.main\r\n\r\n      }\r\n    },\r\n    margined: {\r\n        marginTop: theme.spacing(3)\r\n\r\n    }\r\n   \r\n  }));\r\n\r\n\r\nconst footerLinks=[\r\n    {label: \"Terms and Conditions\", link: '#'},\r\n {label: \"• Privacy policy\", link: '#'},\r\n {label: \"• What is openpush\", link: '#'},\r\n {label: \"• Get golden rabbits\", link: '#'} ,\r\n{label: \"• FAQ\", link: 'FAQ'},\r\n{label: \"• Deal\", link: '#'},\r\n {label: \"• Social\", link: '#'},\r\n {label: \"contact\", link: '#'}]\r\nfunction Footer(props) {\r\n\r\n    const classes=useStyles();\r\n    return (\r\n        <footer className={classes.footer}>\r\n            <Grid container justify=\"center\" >\r\n                 \r\n                    {footerLinks.map((link,idx)=>(\r\n                        <Link key={idx} \r\n                        component={BrowserLink}\r\n                        to={link.link}\r\n                        // href={link.link} \r\n                        underline=\"hover\" \r\n                        className={`${classes.link} ${idx===2?\"active\":\"\"}`} >\r\n                        {link.label}\r\n                      </Link>\r\n                    ))}\r\n\r\n            </Grid>\r\n            <Grid container justify=\"center\" className={classes.margined}>\r\n                <Typography component=\"span\" variant=\"caption\" color=\"textSecondary\">\r\n                OPENPUSH IS OWNED AND OPERATED BY MV CONCEPT EOOD\r\n\r\n                </Typography>\r\n\r\n            </Grid>\r\n\r\n            \r\n        </footer>\r\n    )\r\n}\r\n\r\nFooter.propTypes = {\r\n\r\n}\r\n\r\nexport default Footer\r\n\r\n","C:\\Users\\PC\\Desktop\\biapi openpush remake\\openpush-remake\\src\\components\\CustomModal.js",[],"C:\\Users\\PC\\Desktop\\biapi openpush remake\\openpush-remake\\src\\pages\\auth\\Login.js",["221"],"import React,{ useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from 'react-redux';\r\nimport {login} from '../../redux/actions/user-actions'\r\nimport {\r\n  Grid,\r\n  TextField,\r\n  FormControl,\r\n  Typography,\r\n  Link,\r\n  Checkbox,\r\n  Button,\r\n} from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\n\r\n// Fake user\r\nimport user from '../../data/user'\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  form: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    margin: \"auto\",\r\n    width: \"fit-parent\",\r\n    overflow: \"hidden\",\r\n  },\r\n  formControl: {\r\n    marginTop: theme.spacing(2),\r\n    width: \"100%\",\r\n  },\r\n  formControlLabel: {\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  section: {\r\n    marginTop: theme.spacing(4),\r\n  },\r\n  devider: {\r\n    // display: \"flex\",\r\n    // alignItems: \"center\",\r\n    // textAlign: \"center\",\r\n    \"&::before\": {\r\n      content: '\"\"',\r\n      height: 10,\r\n      color:'red',\r\n      display:\"block\",\r\n      backgroundColor: 'red',\r\n      marginRight:\"20px\",\r\n      borderBottom: \"1px solid #000\",\r\n    },\r\n    \"&::after\": {\r\n      content: '\"\"',\r\n      height: 10,\r\n      color:'red',\r\n      display:\"block\",\r\n      backgroundColor: 'red',\r\n      marginLeft:\"20px\",\r\n      borderBottom: \"1px solid #000\",\r\n    },\r\n  },\r\n}));\r\n\r\nfunction Login(props) {\r\n  const classes = useStyles();\r\n\r\n  const [email,setEmail]=useState('');\r\n  const [password,setPassword]=useState('');\r\n\r\n  const handleLogin=(e)=>{\r\n    console.log(email,password);\r\n    if(email===\"exemple@exemple.com\" && password===\"biapi\"){\r\n      props.login(user)\r\n\r\n      window.location.reload()\r\n    }\r\n\r\n\r\n  }\r\n  return (\r\n    <div>\r\n      <form className={classes.form}>\r\n        <legend>\r\n          <Typography variant=\"h5\" color=\"inherit\">\r\n            {\" \"}\r\n            Sign in\r\n          </Typography>\r\n          New user?{\" \"}\r\n          <Link color=\"secondary\" href=\"#\" underline=\"hover\">\r\n            Create an account\r\n          </Link>\r\n        </legend>\r\n        <Grid container direction=\"column\" spacing={3}>\r\n          <Grid item xs>\r\n            <FormControl className={classes.formControl}>\r\n              <TextField\r\n                fullWidth\r\n                id=\"username-input\"\r\n                name=\"email\"\r\n                placeholder=\"Email or Phone\"\r\n                variant=\"filled\"\r\n                value={email}\r\n                onChange={(e)=>setEmail(e.target.value)}\r\n              />\r\n            </FormControl>\r\n          </Grid>\r\n          <Grid item xs>\r\n            <TextField\r\n              fullWidth\r\n              id=\"password-input\"\r\n              placeholder=\"Password\"\r\n              type=\"password\"\r\n              name=\"password\"\r\n              variant=\"filled\"\r\n              autoComplete=\"current-password\"\r\n              value={password}\r\n              onChange={(e)=>setPassword(e.target.value)}\r\n            />\r\n          </Grid>\r\n          <Grid item xs>\r\n            <Checkbox\r\n              defaultChecked\r\n              color=\"secondary\"\r\n              inputProps={{ \"aria-label\": \"primary checkbox\" }}\r\n            />\r\n            <label> Remeber me</label>\r\n          </Grid>\r\n          <Grid item xs>\r\n            <Button fullWidth color=\"secondary\" variant=\"contained\" onClick={handleLogin}>\r\n              Login\r\n            </Button>\r\n          </Grid>\r\n          <Grid item xs container direction=\"row\" justify=\"center\">\r\n            <Typography variant=\"caption\" color=\"inherit\">\r\n              {\" \"}\r\n              <Link href=\"#\" color=\"inherit\">\r\n                Forgot password?\r\n              </Link>\r\n            </Typography>\r\n          </Grid>\r\n        </Grid>\r\n      </form>\r\n      <Grid\r\n        container\r\n        direction=\"row\"\r\n        justify=\"center\"\r\n        // className={classes.devider}\r\n      >\r\n        <Typography variant=\"caption\" color=\"textSecondary\">Or</Typography>\r\n      </Grid>\r\n      \r\n\r\n      <Grid\r\n        container\r\n        direction=\"row\"\r\n        justify=\"center\"\r\n        spacing={5}\r\n        className={classes.section}\r\n      >\r\n        <Grid item>\r\n          <Link href=\"#\">\r\n            <img src=\"/assets/imgs/facebook_logo.png\" alt=\"\" />\r\n          </Link>\r\n        </Grid>\r\n        <Grid item>\r\n          <Link href=\"#\">\r\n            <img src=\"/assets/imgs/google_logo.png\" alt=\"\" />\r\n          </Link>\r\n        </Grid>\r\n        <Grid item>\r\n          <Link href=\"#\">\r\n            <img src=\"/assets/imgs/twitter_logo.png\" alt=\"\" />\r\n          </Link>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n\r\nLogin.propTypes = {};\r\nconst mapStateToProps = (state) => ({\r\n  \r\n})\r\n\r\nconst mapDispatchToProps =(dispatch)=> ({\r\n  login: (user)=>dispatch(login(user))\r\n  \r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Login)\r\n","C:\\Users\\PC\\Desktop\\biapi openpush remake\\openpush-remake\\src\\pages\\auth\\Register.js",["222"],"import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport {\r\n  Grid,\r\n  TextField,\r\n  FormControl,\r\n  Typography,\r\n  Link,\r\n  Checkbox,\r\n  Button,\r\n} from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  form: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    margin: \"auto\",\r\n    width: \"fit-parent\",\r\n    overflow: \"hidden\",\r\n  },\r\n  formControl: {\r\n    marginTop: theme.spacing(2),\r\n    width: \"100%\",\r\n  },\r\n  formControlLabel: {\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  section: {\r\n    marginTop: theme.spacing(4),\r\n  },\r\n  devider: {\r\n    // display: \"flex\",\r\n    // alignItems: \"center\",\r\n    // textAlign: \"center\",\r\n    \"&::before\": {\r\n      content: '\"\"',\r\n      height: 10,\r\n      color:'red',\r\n      display:\"block\",\r\n      backgroundColor: 'red',\r\n      marginRight:\"20px\",\r\n      borderBottom: \"1px solid #000\",\r\n    },\r\n    \"&::after\": {\r\n      content: '\"\"',\r\n      height: 10,\r\n      color:'red',\r\n      display:\"block\",\r\n      backgroundColor: 'red',\r\n      marginLeft:\"20px\",\r\n      borderBottom: \"1px solid #000\",\r\n    },\r\n  },\r\n}));\r\n\r\nfunction Register(props) {\r\n  const classes = useStyles();\r\n  return (\r\n    <div>\r\n      <form className={classes.form}>\r\n        <legend>\r\n          <Typography variant=\"h5\" color=\"inherit\">\r\n            {\" \"}\r\n            Create an account\r\n          </Typography>\r\n          Already have an account?{\" \"}\r\n          <Link color=\"secondary\" href=\"#\" underline=\"hover\">\r\n            Sign in\r\n          </Link>\r\n        </legend>\r\n        <Grid container direction=\"column\" spacing={3}>\r\n          <Grid item xs>\r\n            <FormControl className={classes.formControl}>\r\n              <TextField\r\n                fullWidth\r\n                id=\"username-input\"\r\n                label=\"Email or Phone\"\r\n                variant=\"filled\"\r\n              />\r\n            </FormControl>\r\n          </Grid>\r\n          <Grid item xs>\r\n            <TextField\r\n              fullWidth\r\n              id=\"password-input\"\r\n              label=\"Password\"\r\n              type=\"password\"\r\n              variant=\"filled\"\r\n              autoComplete=\"current-password\"\r\n            />\r\n          </Grid>\r\n          <Grid item xs>\r\n            <Checkbox\r\n              defaultChecked\r\n              color=\"secondary\"\r\n              inputProps={{ \"aria-label\": \"primary checkbox\" }}\r\n            />\r\n            <label> I have read and agree to Terms and Conditions, Privacy policy</label>\r\n          </Grid>\r\n          <Grid item xs>\r\n            <Button fullWidth color=\"secondary\" variant=\"contained\">\r\n              Register\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n      </form>\r\n      <Grid\r\n        container\r\n        direction=\"row\"\r\n        justify=\"center\"\r\n        // className={classes.devider}\r\n      >\r\n        <Typography variant=\"caption\" color=\"textSecondary\">Or</Typography>\r\n      </Grid>\r\n      \r\n\r\n      <Grid\r\n        container\r\n        direction=\"row\"\r\n        justify=\"center\"\r\n        spacing={5}\r\n        className={classes.section}\r\n      >\r\n        <Grid item>\r\n          <Link href=\"#\">\r\n            <img src=\"/assets/imgs/facebook_logo.png\" alt=\"\" />\r\n          </Link>\r\n        </Grid>\r\n        <Grid item>\r\n          <Link href=\"#\">\r\n            <img src=\"/assets/imgs/google_logo.png\" alt=\"\" />\r\n          </Link>\r\n        </Grid>\r\n        <Grid item>\r\n          <Link href=\"#\">\r\n            <img src=\"/assets/imgs/twitter_logo.png\" alt=\"\" />\r\n          </Link>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n\r\nRegister.propTypes = {};\r\n\r\nexport default Register;\r\n","C:\\Users\\PC\\Desktop\\biapi openpush remake\\openpush-remake\\src\\pages\\wallet\\index.js",[],"C:\\Users\\PC\\Desktop\\biapi openpush remake\\openpush-remake\\src\\pages\\wallet\\wallet.js",["223","224","225","226"],"import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport {\r\n  Grid,\r\n  Box,\r\n  Typography,\r\n  TextField,\r\n  Button,\r\n\r\n} from \"@material-ui/core\";\r\nimport FilterListIcon from \"@material-ui/icons/FilterList\";\r\n\r\n// Components\r\nimport CustomCard from \"../../components/CustomCard\";\r\nimport ProductCard from \"../../components/ProductCard\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  bglight: {\r\n    backgroundColor: theme.palette.primary.light,\r\n  },\r\n}));\r\n\r\nfunction TabPanel(props) {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`wrapped-tabpanel-${index}`}\r\n      aria-labelledby={`wrapped-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && (\r\n        <Box p={3}>\r\n          <Typography component=\"span\">{children}</Typography>\r\n        </Box>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nconst tabprops = (index) => {\r\n  return {\r\n    id: `wrapped-tab-${index}`,\r\n    \"aria-controls\": `wrapped-tabpanel-${index}`,\r\n  };\r\n};\r\n\r\nconst tabTitles = [\"All\", \"Food & Drins\", \"Health & Beauty\", \"Sport\"];\r\nconst instructions = [\r\n  \"Redeem your ticket for 0 Rabbits\",\r\n  \"Go to your favourite supermarket and spent minimum 25 leva on Groceries\",\r\n  \"Activate your golden ticket\",\r\n  \"Take a picture of your bill within 2 hours of purchase (maximum once a day) to enter the Tombola\",\r\n];\r\n\r\nfunction Wallet(props) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <>\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={12} lg={3}>\r\n          <Box\r\n            display=\"flex\"\r\n            flexDirection=\"row\"\r\n            justifyContent=\"space-between\"\r\n            alignItems=\"center\"\r\n          >\r\n            <Typography component=\"span\" variant=\"h5\">\r\n              My Wallet\r\n            </Typography>\r\n          </Box>\r\n        </Grid>\r\n        <Grid item xs={12} lg={9} container direction=\"row\">\r\n          <Grid item xs={10}>\r\n            <TextField\r\n              fullWidth\r\n              id=\"filled-search\"\r\n              label=\"Search\"\r\n              type=\"search\"\r\n              variant=\"filled\"\r\n            />\r\n          </Grid>\r\n          <Grid item xs={2} container justify=\"center\">\r\n            <Button className={classes.bglight}>\r\n              <FilterListIcon />\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n      <Grid container spacing={2}>\r\n      <Grid item sm={12} md={6} lg={4} >\r\n              {/* Instructions */}\r\n              <CustomCard\r\n                title=\"Instruction\"\r\n                withMoreAction\r\n                body={\r\n                  <ol>\r\n                    {instructions.map((inst, index) => (\r\n                      <li key={index}>{inst}</li>\r\n                    ))}{\" \"}\r\n                  </ol>\r\n                }\r\n                actions={\r\n                  // <ThemeProvider theme={}>\r\n                  <Button fullWidth color=\"primary\" variant=\"contained\">\r\n                    {\" \"}\r\n                    <Typography color=\"textPrimary\">Redeem product</Typography> \r\n                  </Button>\r\n\r\n\r\n                  // </ThemeProvider>\r\n                }\r\n              />\r\n            </Grid>\r\n        {[1, 2, 3, 4, 5]\r\n          .map(\r\n            (el) =>\r\n              \"Voucher for Burger King BGN Foodpanda Voucher For All Users\"\r\n          )\r\n          .map((title, idx) => (\r\n            <Grid key={idx} item sm={12} md={6} lg={4} >\r\n              <ProductCard\r\n                disabled={idx>=2}\r\n                withMoreAction\r\n                title={title}\r\n                subheader={title}\r\n                price={Math.random() * 100000}\r\n                image=\"/assets/dummy/main/burger_king.png\"\r\n              />\r\n            </Grid>\r\n          ))}\r\n      </Grid>\r\n    </>\r\n  );\r\n}\r\n\r\nWallet.propTypes = {};\r\n\r\nexport default Wallet;\r\n","C:\\Users\\PC\\Desktop\\biapi openpush remake\\openpush-remake\\src\\components\\SocialMediaFooter.js",["227"],"import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Grid, Link, Typography } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n \r\n  \r\n}));\r\n\r\nfunction SocialMediaFooter(props) {\r\n  const classes=useStyles()\r\n  return (\r\n    <Grid container justify=\"center\" direction=\"column\" spacing={4} className={classes.container}>\r\n      <Grid item xs container direction=\"row\" justify=\"center\">\r\n        <Typography variant=\"h4\" > Stay connected</Typography>\r\n      </Grid>\r\n      <Grid\r\n        item\r\n        xs\r\n        container\r\n        direction=\"row\"\r\n        justify=\"center\"\r\n        spacing={5}\r\n        // className={classes.section}\r\n      >\r\n        <Grid item>\r\n          <Link href=\"#\">\r\n            <img src=\"/assets/imgs/facebook_logo.png\" alt=\"\" />\r\n          </Link>\r\n        </Grid>\r\n        <Grid item>\r\n          <Link href=\"#\">\r\n            <img src=\"/assets/imgs/youtube_logo.png\" alt=\"\" />\r\n          </Link>\r\n        </Grid>\r\n        <Grid item>\r\n          <Link href=\"#\">\r\n            <img src=\"/assets/imgs/twitter_logo.png\" alt=\"\" />\r\n          </Link>\r\n        </Grid>\r\n        <Grid item>\r\n          <Link href=\"#\">\r\n            <img src=\"/assets/imgs/instagram_logo.png\" alt=\"\" />\r\n          </Link>\r\n        </Grid>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n\r\nSocialMediaFooter.propTypes = {};\r\n\r\nexport default SocialMediaFooter;\r\n","C:\\Users\\PC\\Desktop\\biapi openpush remake\\openpush-remake\\src\\pages\\wallet\\FortuneWheel.js",["228","229"],"import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport {\r\n  Grid,\r\n  Link,\r\n  Typography,\r\n  FormControl,\r\n  TextField,\r\n  IconButton,\r\n  FilledInput,\r\n  InputAdornment,\r\n} from \"@material-ui/core\";\r\nimport FileCopyOutlinedIcon from \"@material-ui/icons/FileCopyOutlined\";\r\nimport MoreHorizIcon from \"@material-ui/icons/MoreHoriz\";\r\n// Components\r\nimport FluidImage from \"../../components/FluidImage\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  centered: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n  },\r\n  shareLink: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    justifyContent: \"center\",\r\n    // height: \"100%\",\r\n    // width: \"100%\",\r\n    // alignItems:'center',\r\n    // margin: 'auto',\r\n    \"& *\": {\r\n      display: \"flex\",\r\n      justifyContent: \"center\",\r\n    },\r\n  },\r\n  scoreContainer: {\r\n    [theme.breakpoints.up(\"lg\")]: {\r\n      backgroundColor: \"#494949\",\r\n    },\r\n  },\r\n}));\r\n\r\nfunction FortuneWheel(props) {\r\n  const classes = useStyles();\r\n  return (\r\n    <Grid container spacing={3} direction=\"column\">\r\n      <Grid item xs>\r\n        <Typography component=\"span\" variant=\"h5\">\r\n          Fortune Wheel\r\n        </Typography>\r\n      </Grid>\r\n      <Grid item xs container spacing={3} direction=\"row\" justify=\"center\" alignItems=\"center\">\r\n        {/* Wheel */}\r\n        <Grid item xs={12} lg={6} container direction=\"row\" justify=\"center\">\r\n          <FluidImage image=\"/assets/dummy/wallet/wheel.png\" />\r\n          {/* <img src=\"/assets/dummy/wallet/wheel.png\" alt=\"\" /> */}\r\n        </Grid>\r\n        {/* Infos */}\r\n        <Grid\r\n          item\r\n          xs={12}\r\n          lg={6}\r\n          container\r\n          direction=\"column\"\r\n          justify=\"center\"\r\n          alignItems=\"center\"\r\n          spacing={4}\r\n        >\r\n          <Grid\r\n            item\r\n            container\r\n            direction=\"row\"\r\n            justify=\"center\"\r\n            alignItems=\"center\"\r\n            spacing={2}\r\n            className={classes.scoreContainer}\r\n          >\r\n            <Grid item container direction=\"row\" justify=\"center\">\r\n              <Typography\r\n                variant=\"caption\"\r\n                color=\"textSecondary\"\r\n                align=\"center\"\r\n              >\r\n                You win\r\n              </Typography>\r\n            </Grid>\r\n            <Grid item xs={3} container direction=\"row\" justify=\"flex-end\">\r\n              <Typography component=\"span\" variant=\"subtitle2\">\r\n                25 000\r\n              </Typography>\r\n            </Grid>\r\n            <Grid item xs={2} container direction=\"row\" justify=\"flex-start\">\r\n              <img src=\"/assets/dummy/main/rabbit.png\" alt=\"\" />\r\n            </Grid>\r\n          </Grid>\r\n          <Grid\r\n            item\r\n            container\r\n            direction=\"column\"\r\n            justify=\"center\"\r\n            alignItems=\"center\"\r\n            spacing={2}\r\n          >\r\n            <Grid item xs container justify=\"center\" direction=\"row\">\r\n              <Typography component=\"span\" variant=\"caption\" align=\"center\">\r\n                For each friend you invite, you can get one additional spin.\r\n                Your friend has to click on the link, register and spin the\r\n                wheel. Your invite link:\r\n              </Typography>\r\n            </Grid>\r\n            <Grid item xs={12} container justify=\"center\">\r\n              <FormControl fullWidth>\r\n                <FilledInput\r\n                  fullWidth\r\n                  type=\"text\"\r\n                  disabled\r\n                  value=\"https://openpush.io/#/invite/https://openpush.io/#/invite/\"\r\n                  endAdornment={\r\n                    <InputAdornment position=\"end\">\r\n                      <IconButton onClick={() => console.log(\"copied\")}>\r\n                        <FileCopyOutlinedIcon color=\"action\" />\r\n                      </IconButton>\r\n                    </InputAdornment>\r\n                  }\r\n                />\r\n              </FormControl>\r\n            </Grid>\r\n          </Grid>\r\n          {/* Share */}\r\n          <Grid\r\n            item\r\n            xs\r\n            container\r\n            spacing={3}\r\n            direction=\"column\"\r\n            justify=\"center\"\r\n          >\r\n            <Grid item container direction=\"row\" justify=\"center\">\r\n              <Typography variant=\"caption\" align=\"center\">\r\n                Share your winnings on facebook and get one free wheel spin (you\r\n                can only get the reward once a day)\r\n              </Typography>\r\n            </Grid>\r\n            <Grid\r\n              item\r\n              xs\r\n              container\r\n              direction=\"row\"\r\n              justify=\"center\"\r\n              spacing={4}\r\n            >\r\n              {/* <Grid item container> */}\r\n                <Grid item>\r\n                  <Link href=\"#\" className={classes.shareLink}>\r\n                    {/* <FluidImage image=\"/assets/imgs/messanger_logo_share.png\" alt=\"\" /> */}\r\n                    <img\r\n                      height={40}\r\n                      src=\"/assets/imgs/messanger_logo_share.png\"\r\n                      alt=\"\"\r\n                    />\r\n                    {/* <Typography variant=\"caption\" color=\"textSecondary\">Messanger</Typography> */}\r\n                  </Link>\r\n                </Grid>\r\n                <Grid item>\r\n                  <Link href=\"#\" className={classes.shareLink}>\r\n                    {/* <FluidImage image=\"/assets/imgs/facebook_logo_share.png\" alt=\"\" /> */}\r\n                    <img\r\n                      height={40}\r\n                      src=\"/assets/imgs/facebook_logo_share.png\"\r\n                      alt=\"\"\r\n                    />\r\n                    {/* <Typography variant=\"caption\" color=\"textSecondary\">Facebook</Typography> */}\r\n                  </Link>\r\n                </Grid>\r\n                <Grid item>\r\n                  <Link href=\"#\" className={classes.shareLink}>\r\n                    {/* <FluidImage image=\"/assets/imgs/gmail_logo_share.png\" alt=\"\" /> */}\r\n                    <img\r\n                      height={40}\r\n                      src=\"/assets/imgs/gmail_logo_share.png\"\r\n                      alt=\"\"\r\n                    />\r\n                    {/* <Typography variant=\"caption\" color=\"textSecondary\">Gmail</Typography> */}\r\n                  </Link>\r\n                </Grid>\r\n                <Grid item>\r\n                  <Link href=\"#\" className={classes.shareLink}>\r\n                    <IconButton onClick={() => console.log(\"copied\")}>\r\n                      <MoreHorizIcon color=\"action\" />\r\n                    </IconButton>\r\n\r\n                    <Typography variant=\"caption\" color=\"textSecondary\">\r\n                      Plus\r\n                    </Typography>\r\n                  </Link>\r\n                </Grid>\r\n              {/* </Grid> */}\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n\r\nFortuneWheel.propTypes = {};\r\n\r\nexport default FortuneWheel;\r\n","C:\\Users\\PC\\Desktop\\biapi openpush remake\\openpush-remake\\src\\pages\\buy\\index.js",[],"C:\\Users\\PC\\Desktop\\biapi openpush remake\\openpush-remake\\src\\pages\\buy\\BuyProduct.js",["230"],"import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport {\r\n  makeStyles,\r\n  createMuiTheme,\r\n  ThemeProvider,\r\n} from \"@material-ui/core/styles\";\r\nimport {\r\n  Grid,\r\n  Tabs,\r\n  Tab,\r\n  Button,\r\n  Typography,\r\n  CardMedia,\r\n} from \"@material-ui/core\";\r\nimport successFailTheme from \"../../themes/success-fail\";\r\n// Components\r\nimport TabPanel from \"../../components/TabPanel\";\r\nimport ProductCard from \"../../components/ProductCard\";\r\nimport CustomModal from \"../../components/CustomModal\";\r\nimport RedeemProduct from \"./components/RedeemProduct\";\r\nimport MissingRabbits from \"./components/MissingRabbits\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  centered: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n  },\r\n  sectionHeader: {\r\n    paddingLeft: theme.spacing(2),\r\n  },\r\n  media: {\r\n    width: \"100%\",\r\n    paddingTop: \"56.25%\", // 16:9\r\n  },\r\n  countItem: {\r\n    \"&:last-child\": {\r\n      borderRight: \"none\",\r\n    },\r\n    \"& *\": {\r\n      position: \"relative\",\r\n      zIndex: 4,\r\n      // borderRight: '1px solid white',\r\n      background: \"none\",\r\n      \"&::before\": {\r\n        content: '\"\"',\r\n        position: \"absolute\",\r\n        top: 0,\r\n        left: 0,\r\n        width: \"100%\",\r\n        height: \"100%\",\r\n        opacity: 0.3,\r\n        backgroundColor: theme.palette.secondary.dark,\r\n      },\r\n    },\r\n  },\r\n}));\r\n\r\nconst tabprops = (index) => {\r\n  return {\r\n    id: `wrapped-tab-${index}`,\r\n    \"aria-controls\": `wrapped-tabpanel-${index}`,\r\n  };\r\n};\r\nconst tabTitles = [\"Instruction\", \"Specific rules\", \"Please note\"];\r\nconst instructions = [\r\n  \"Redeem your ticket for 0 Rabbits\",\r\n  \"Go to your favourite supermarket and spent minimum 25 leva on Groceries\",\r\n  \"Activate your golden ticket\",\r\n  \"Take a picture of your bill within 2 hours of purchase (maximum once a day) to enter the Tombola\",\r\n];\r\n\r\nexport const PromotionCountDow = (props) => {\r\n  const cols = [\r\n    { label: \"Days\", value: props.days },\r\n    { label: \"Hours\", value: props.hours },\r\n    { label: \"Minutes\", value: props.minutes },\r\n    { label: \"Seconds\", value: props.seconds },\r\n  ];\r\n  return (\r\n    <Grid\r\n      container\r\n      className={props.classes ? props.classes.countItem : \"\"}\r\n      spacing={1}\r\n    >\r\n      {cols.map((el, idx) => (\r\n        <Grid\r\n          key={idx}\r\n          item\r\n          xs={3}\r\n          container\r\n          justify=\"center\"\r\n          direction=\"column\"\r\n        >\r\n          <Typography align=\"center\" variant=\"h3\">\r\n            {el.value}\r\n          </Typography>\r\n          <Typography align=\"center\" variant=\"caption\" color=\"textSecondary\">\r\n            {el.label}\r\n          </Typography>\r\n        </Grid>\r\n      ))}\r\n    </Grid>\r\n  );\r\n};\r\nPromotionCountDow.prototype = {\r\n  days: PropTypes.number.isRequired,\r\n  hours: PropTypes.number.isRequired,\r\n  minutes: PropTypes.number.isRequired,\r\n  seconds: PropTypes.number.isRequired,\r\n};\r\n\r\nfunction BuyStep1(props) {\r\n  const classes = useStyles();\r\n  const theme = createMuiTheme(successFailTheme);\r\n  const [open, setOpen] = useState(false);\r\n  const [page, setPage] = useState(props.product && props.product.price>10000?<MissingRabbits />:<RedeemProduct confirmHandler={()=>console.log()} cancelHandler={()=>console.log()}/>);\r\n\r\n  const [currentTab, setCurrentTab] = useState(tabTitles[0]);\r\n\r\n  const handleChange = (e, val) => {\r\n    setCurrentTab(val);\r\n  };\r\n  return (\r\n    <Grid container spacing={3} direction=\"column\">\r\n      <CustomModal\r\n        body={page}\r\n        open={open}\r\n        handleClose={() => setOpen(false)}\r\n        maxWidth={\"sm\"}\r\n        style={{minHeight: \"300px\"}}\r\n      />\r\n      <Grid item xs container spacing={3} direction=\"row\" justify=\"center\">\r\n        {/* Wheel */}\r\n        <Grid item xs={12} lg={6} container direction=\"row\" justify=\"center\">\r\n          <CardMedia\r\n            className={classes.media}\r\n            image=\"/assets/dummy/buy/shop_thumbnail.png\"\r\n          />\r\n          {/* <img src=\"/assets/dummy/buy/shop_thumbnail.png\" alt=\"\" /> */}\r\n        </Grid>\r\n        {/* Infos */}\r\n        <Grid\r\n          item\r\n          xs={12}\r\n          lg={6}\r\n          container\r\n          direction=\"column\"\r\n          justify=\"center\"\r\n          alignItems=\"center\"\r\n          spacing={4}\r\n        >\r\n          <Grid\r\n            item\r\n            container\r\n            direction=\"row\"\r\n            justify=\"center\"\r\n            alignItems=\"center\"\r\n            spacing={2}\r\n            className={classes.scoreContainer}\r\n          >\r\n            <Grid item container direction=\"column\" justify=\"center\">\r\n              <Typography variant=\"h6\" color=\"inherit\" align=\"center\">\r\n                Voucher for Burger King\r\n              </Typography>\r\n              <Typography\r\n                variant=\"caption\"\r\n                color=\"textSecondary\"\r\n                align=\"center\"\r\n              >\r\n                FOOD AND DRINKS\r\n              </Typography>\r\n            </Grid>\r\n\r\n            <Grid item xs={3} container direction=\"row\" justify=\"flex-end\">\r\n              <Typography component=\"span\" variant=\"h6\" align=\"center\">\r\n                28 000\r\n              </Typography>\r\n            </Grid>\r\n            <Grid item xs={2} container direction=\"row\" justify=\"flex-start\">\r\n              <img src=\"/assets/dummy/main/rabbit.png\" alt=\"\" />\r\n            </Grid>\r\n          </Grid>\r\n          <Grid\r\n            item\r\n            container\r\n            direction=\"column\"\r\n            justify=\"center\"\r\n            alignItems=\"center\"\r\n            spacing={2}\r\n          >\r\n            <Grid item xs container justify=\"center\" direction=\"row\">\r\n              <Typography\r\n                component=\"span\"\r\n                variant=\"caption\"\r\n                color=\"secondary\"\r\n                align=\"center\"\r\n              >\r\n                Promotion ending in\r\n              </Typography>\r\n            </Grid>\r\n            <Grid item xs={12} container justify=\"center\">\r\n              <PromotionCountDow\r\n                days={3}\r\n                hours={12}\r\n                minutes={55}\r\n                seconds={6}\r\n                classes={classes}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} container justify=\"center\">\r\n              <ThemeProvider theme={theme}>\r\n                <Button\r\n                  fullWidth\r\n                  color=\"primary\"\r\n                  variant=\"contained\"\r\n                  onClick={() => setOpen(true)}\r\n                >\r\n                  {\" \"}\r\n                  <Typography color=\"textPrimary\">Redeem product</Typography>\r\n                </Button>\r\n              </ThemeProvider>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n        {/* Tabs */}\r\n        <Grid item xs container spacing={3} direction=\"column\" justify=\"center\">\r\n          <Grid item xs>\r\n            <Tabs\r\n              value={currentTab}\r\n              onChange={handleChange}\r\n              indicatorColor=\"secondary\"\r\n              variant=\"fullWidth\"\r\n              aria-label=\"categories filters tabs\"\r\n            >\r\n              {tabTitles.map((el, idx) => (\r\n                <Tab key={idx} value={el} label={el} {...tabprops(el)} />\r\n              ))}\r\n            </Tabs>\r\n          </Grid>\r\n          <TabPanel value={currentTab} index={tabTitles[0]}>\r\n            <ol>\r\n              {instructions.map((inst, index) => (\r\n                <li key={index}>{inst}</li>\r\n              ))}{\" \"}\r\n            </ol>\r\n          </TabPanel>\r\n        </Grid>\r\n\r\n        {/* Similar Sales */}\r\n        <Grid item xs={12} container>\r\n          <Grid item xs>\r\n            <Typography variant=\"h4\">Similar Sales</Typography>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid item xs container spacing={3} direction=\"row\" justify=\"center\">\r\n          {[1, 2, 3, 4, 5]\r\n            .map(\r\n              (el) =>\r\n                \"Voucher for Burger King BGN Foodpanda Voucher For All Users\"\r\n            )\r\n            .map((title, idx) => (\r\n              <Grid key={idx} item sm={12} md={6} lg={4}>\r\n                <ProductCard\r\n                  withMoreAction\r\n                  title={title}\r\n                  subheader={title}\r\n                  price={Math.random() * 100000}\r\n                  image=\"/assets/dummy/main/burger_king.png\"\r\n                />\r\n              </Grid>\r\n            ))}\r\n        </Grid>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n\r\nBuyStep1.propTypes = {};\r\n\r\nexport default BuyStep1;\r\n","C:\\Users\\PC\\Desktop\\biapi openpush remake\\openpush-remake\\src\\themes\\success-fail.js",[],"C:\\Users\\PC\\Desktop\\biapi openpush remake\\openpush-remake\\src\\components\\TabPanel.js",[],"C:\\Users\\PC\\Desktop\\biapi openpush remake\\openpush-remake\\src\\pages\\buy\\components\\ActivationQR.js",["231","232"],"import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport {\r\n  Grid,\r\n  Typography,\r\n  CardMedia,\r\n  FormControl,\r\n  IconButton,\r\n  FilledInput,\r\n  InputAdornment,\r\n} from \"@material-ui/core\";\r\nimport {\r\n    makeStyles,\r\n  } from \"@material-ui/core/styles\";\r\nimport FileCopyOutlinedIcon from '@material-ui/icons/FileCopyOutlined';\r\n\r\n// Components\r\nimport FluidImage from '../../../components/FluidImage';\r\nimport { useState } from \"react\";\r\nimport { useEffect } from \"react\";\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n   \r\n    smoothRedBg: {\r\n     \r\n        position: \"relative\",\r\n        zIndex: 4,\r\n        background: \"none\",\r\n        \"&::before\": {\r\n          content: '\"\"',\r\n          position: \"absolute\",\r\n          top: 0,\r\n          left: 0,\r\n          width: \"100%\",\r\n          height: \"100%\",\r\n          opacity: 0.3,\r\n          zIndex: 1,\r\n          backgroundColor: theme.palette.secondary.dark,\r\n        },\r\n     \r\n    },\r\n  }));\r\n\r\n\r\nfunction ActivationQR(props) {\r\n    const classes = useStyles();\r\n    const deadLine=new Date(props.activationDate);\r\n    const [remainingTime,setRemainingTime]=useState(new Date());\r\n\r\n\r\n    useEffect(()=>{\r\n        let x=setInterval(function() {\r\n\r\n            // Get today's date and time\r\n            var now = new Date().getTime();\r\n              \r\n            \r\n            var distance = deadLine - now;\r\n              \r\n           \r\n            var hours = Math.floor((distance % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));\r\n            var minutes = Math.floor((distance % (1000 * 60 * 60)) / (1000 * 60));\r\n            var seconds = Math.floor((distance % (1000 * 60)) / 1000);\r\n              \r\n            let remains;\r\n            \r\n            // If the count down is over, write some text \r\n            if (distance < 0) {\r\n                clearInterval(x);\r\n                remains=\"EXPIRED!\"\r\n                \r\n            }\r\n            else remains=hours + \":\"+ minutes + \":\" + seconds;\r\n\r\n            setRemainingTime(remains);\r\n          }, 1000);\r\n\r\n    },[])\r\n  return (\r\n    <Grid container spacing={3} direction=\"row\" justify=\"center\">\r\n      <Grid item xs={12} lg={7} container direction=\"row\" justify=\"center\" spacing={3}>\r\n          {/* QR Code */}\r\n        <Grid item xs={12} md={5} container>\r\n            <Grid item xs={12}>\r\n                <FluidImage image=\"/assets/dummy/buy/qr_code.png\" />\r\n            </Grid>\r\n\r\n        </Grid>\r\n        {/* Copy and Share */}\r\n        <Grid item xs={12} md={7} container direction=\"row\" justify=\"center\" spacing={2}>\r\n          <Grid item xs={12}>\r\n            <Typography >\r\n              Tip: For each friend you invite, you can get one additional spin.\r\n              Your friend has to click on ther and spin the wheel. Your link:\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <FormControl fullWidth>\r\n              <FilledInput\r\n                fullWidth\r\n                type=\"text\"\r\n                disabled\r\n                value=\"https://openpush.io/#/invite/https://openpush.io/#/invite/\"\r\n                endAdornment={\r\n                  <InputAdornment position=\"end\">\r\n                    <IconButton onClick={() => console.log(\"copied\")}>\r\n                      <FileCopyOutlinedIcon color=\"action\" />\r\n                    </IconButton>\r\n                  </InputAdornment>\r\n                }\r\n              />\r\n            </FormControl>\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n      {/* Activation CountDown */}\r\n      <Grid item xs={12} lg={5} container direction=\"column\" justify=\"center\" alignItems=\"center\" spacing={2}  >\r\n          <Grid item  container className={classes.smoothRedBg}>\r\n          <Grid item xs={12} container direction=\"row\" justify=\"center\">\r\n              <Typography variant=\"h4\" color=\"secondary\">{remainingTime.toString()}</Typography>\r\n\r\n          </Grid>\r\n          <Grid item xs={12} container direction=\"row\" justify=\"center\">\r\n              <Typography variant=\"caption\" color=\"textSecondary\">{props.activationDate.toString()}</Typography>\r\n\r\n          </Grid>\r\n\r\n          </Grid>\r\n\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n\r\nActivationQR.propTypes = {\r\n  activationDate: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default ActivationQR;\r\n","C:\\Users\\PC\\Desktop\\biapi openpush remake\\openpush-remake\\src\\components\\FluidImage.js",["233"],"import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport {\r\n  CardMedia,\r\n} from \"@material-ui/core\";\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      width:\"100%\",\r\n    },\r\n    media: {\r\n      width: \"100%\",\r\n    //   height: 0,\r\n    //   paddingTop: \"56.25%\", // 16:9\r\n    },\r\n  }));\r\nfunction FluidImage(props) {\r\n    const classes = useStyles();\r\n    return (\r\n        <div className={classes.root}>\r\n            <img src={props.image} className={classes.media} alt=\"\"/>\r\n\r\n        </div>\r\n        // <CardMedia image={props.image} className={classes.media}/>\r\n    )\r\n}\r\n\r\nFluidImage.propTypes = {\r\n    image: PropTypes.string.isRequired\r\n\r\n}\r\n\r\nexport default FluidImage\r\n\r\n","C:\\Users\\PC\\Desktop\\biapi openpush remake\\openpush-remake\\src\\pages\\buy\\components\\MissingRabbits.js",["234","235","236"],"import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Grid, Typography, Button, Link } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport FluidImage from \"../../../components/FluidImage\";\r\n\r\nconst choices = [\r\n  {\r\n    label: \"Fortune wheel\",\r\n    to: \"#\",\r\n  },\r\n  {\r\n    label: \"Accept notification\",\r\n    to: \"#\",\r\n  },\r\n  {\r\n    label: \"Fill ranking data\",\r\n    to: \"#\",\r\n  },\r\n  {\r\n    label: \"Fill social connection\",\r\n    to: \"#\",\r\n  },\r\n];\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  headIcon: {\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n    justifyContent: \"center\",\r\n    marginBottom: theme.spacing(5),\r\n    maxHeight: 80,\r\n    \"& img\": {\r\n      maxHeight: 75,\r\n    },\r\n  },\r\n  choiceButton: {\r\n    \"&:hover\": {\r\n      backgroundColor: theme.palette.secondary.main,\r\n    },\r\n  },\r\n}));\r\n\r\nfunction MissingRabbits(props) {\r\n  const classes = useStyles();\r\n  return (\r\n    <Grid container justify=\"center\">\r\n      {/* Head */}\r\n      <Grid item xs={12} container direction=\"row\" justify=\"center\">\r\n        <Grid item xs={3} className={classes.headIcon}>\r\n          <img src=\"/assets/dummy/main/rabbit.png\" alt=\"\" />\r\n        </Grid>\r\n      </Grid>\r\n      {/* Content */}\r\n      <Grid item xs={12} container direction=\"row\" justify=\"center\">\r\n        <Grid item xs={12} container justify=\"center\">\r\n          <Typography align=\"center\" variant=\"caption\">\r\n            You dont have enough rabbit to redeem this product. You can collect\r\n            coins\r\n          </Typography>\r\n        </Grid>\r\n        <Grid item xs={12} container direction=\"column\" spacing={2}>\r\n          {choices.map((choice, index) => (\r\n            <Grid item xs={12}>\r\n              <Button\r\n                key={index}\r\n                fullWidth\r\n                variant=\"outlined\"\r\n                // color=\"primary\"\r\n                className={classes.choiceButton}\r\n                // component={Link}\r\n                // href={choice.to}\r\n              >\r\n                <Typography\r\n                  align=\"center\"\r\n                  variant=\"caption\"\r\n                  color=\"textPrimary\"\r\n                >\r\n                  {choice.label}\r\n                </Typography>\r\n              </Button>\r\n            </Grid>\r\n          ))}\r\n        </Grid>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n\r\nMissingRabbits.propTypes = {};\r\n\r\nexport default MissingRabbits;\r\n","C:\\Users\\PC\\Desktop\\biapi openpush remake\\openpush-remake\\src\\pages\\buy\\components\\RedeemProduct.js",[],"C:\\Users\\PC\\Desktop\\biapi openpush remake\\openpush-remake\\src\\pages\\profile\\index.js",[],"C:\\Users\\PC\\Desktop\\biapi openpush remake\\openpush-remake\\src\\pages\\profile\\large\\index.js",["237","238"],"import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport {Outlet,Link } from \"react-router-dom\";\r\nimport {\r\n  Grid,\r\n  Box,\r\n  Typography,\r\n  IconButton,\r\n  List,\r\n  ListItem,\r\n  ListItemIcon,\r\n  ListItemText,\r\n} from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\n\r\nimport Menu from \"../menu\";\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    list: {\r\n      width: \"100%\",\r\n     \r\n    },\r\n    listItem: {\r\n      backgroundColor: theme.palette.background.paper,\r\n      marginBottom: theme.spacing(1),\r\n      '&.active': {\r\n        backgroundColor: theme.palette.secondary.main,\r\n\r\n      }\r\n      \r\n    },\r\n    placeholder: {\r\n      padding: theme.spacing(4),\r\n      backgroundColor: theme.palette.background.paper\r\n    }\r\n  }));\r\n\r\nfunction Index({currentPage, ...props}) {\r\n    const classes = useStyles();\r\n  return (\r\n    <Grid container direction=\"column\">\r\n      {/* Profile Avatar section */}\r\n      <Grid item xs={12} container>\r\n        <Grid item xs={12}>\r\n          <Box\r\n            display=\"flex\"\r\n            flexDirection=\"row\"\r\n            justifyContent=\"space-between\"\r\n            width={1}\r\n            p={4}\r\n          >\r\n            <Typography variant=\"h4\">My profile</Typography>\r\n          </Box>\r\n        </Grid>\r\n      </Grid>\r\n      <Grid item xs={12} container spacing={2}>\r\n          {/* Main menu section */}\r\n          <Grid item sm={4}>\r\n            <List\r\n            component=\"nav\"\r\n            aria-labelledby=\"nested-list-subheader\"\r\n            className={classes.list}\r\n            color=\"secondary\"\r\n            >\r\n            {Menu && Menu.filter((el,idx)=>idx!==1).map((item, idx) => (\r\n                <ListItem \r\n                button \r\n                key={idx} \r\n                className={`${classes.listItem} ${idx===props.currentPage || idx===0?\"active\":\"\"}`}\r\n                component={Link}\r\n                to={item.link}\r\n                \r\n                >\r\n                <ListItemIcon>{item.icon}</ListItemIcon>\r\n                <ListItemText primary={item.title} />\r\n                </ListItem>\r\n            ))}\r\n            </List>\r\n\r\n          </Grid>\r\n          <Grid item sm={8} className={classes.placeholder}>\r\n              <Outlet />\r\n              \r\n\r\n          </Grid>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n\r\nIndex.propTypes = {};\r\n\r\nexport default Index;\r\n","C:\\Users\\PC\\Desktop\\biapi openpush remake\\openpush-remake\\src\\pages\\profile\\small\\index.js",["239"],"import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport {Outlet } from \"react-router-dom\";\r\n\r\nfunction index({match,...props}) {\r\n    return (\r\n        <div>\r\n            <Outlet />\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nindex.propTypes = {\r\n\r\n\r\n}\r\n\r\nexport default index\r\n\r\n","C:\\Users\\PC\\Desktop\\biapi openpush remake\\openpush-remake\\src\\pages\\profile\\small\\Main.js",["240"],"import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport {Link } from \"react-router-dom\";\r\nimport {\r\n  Grid,\r\n  Box,\r\n  Typography,\r\n  IconButton,\r\n  List,\r\n  ListItem,\r\n  ListItemIcon,\r\n  ListItemText,\r\n} from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n//Icons\r\nimport { ReactComponent as DarkMoonIcon } from \"../../../imgs/icons/moon.svg\";\r\nimport RightArrow from \"@material-ui/icons/ArrowForwardIosOutlined\";\r\n\r\n// Components\r\nimport Avatar from \"../../../components/Avatar\";\r\n\r\nimport Menu from '../menu'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  list: {\r\n    width: \"100%\",\r\n   \r\n  },\r\n  listItem: {\r\n    backgroundColor: theme.palette.background.paper,\r\n    marginBottom: theme.spacing(1),\r\n    \"&:last-child\": {\r\n      marginTop: theme.spacing(3),\r\n    },\r\n  },\r\n}));\r\nfunction Main(props) {\r\n  const classes = useStyles();\r\n  return (\r\n    <Grid container direction=\"column\">\r\n      {/* Profile Avatar section */}\r\n      <Grid item xs={12} container>\r\n        <Grid item xs={12}>\r\n          <Box\r\n            display=\"flex\"\r\n            flexDirection=\"row\"\r\n            justifyContent=\"space-between\"\r\n            width={1}\r\n          >\r\n            <Typography variant=\"h4\">My profile</Typography>\r\n            <IconButton color=\"inherit\">\r\n              <DarkMoonIcon />\r\n            </IconButton>\r\n          </Box>\r\n        </Grid>\r\n        <Grid item xs={12} container spacing={2}>\r\n          <Grid item xs={12} md={4} container justify=\"center\">\r\n            <Avatar style={{width: \"80px\",height: \"80px\" }} />\r\n          </Grid>\r\n          <Grid\r\n            item\r\n            xs={12}\r\n            md={4}\r\n            container\r\n            justify=\"center\"\r\n            alignItems=\"center\"\r\n          >\r\n            <Typography variant=\"body1\">Simple@gmail.com</Typography>\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n      {/* Main menu section */}\r\n      <Grid item xs={12} container>\r\n        <List\r\n          component=\"nav\"\r\n          aria-labelledby=\"nested-list-subheader\"\r\n          className={classes.list}\r\n        >\r\n          {Menu && Menu.map((item, idx) => (\r\n            <ListItem button \r\n            key={idx} className={classes.listItem}\r\n            component={Link}\r\n                to={item.link}\r\n            >\r\n              <ListItemIcon>{item.icon}</ListItemIcon>\r\n              <ListItemText primary={item.title} />\r\n              <RightArrow />\r\n            </ListItem>\r\n          ))}\r\n        </List>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n\r\nMain.propTypes = {};\r\n\r\nexport default Main;\r\n","C:\\Users\\PC\\Desktop\\biapi openpush remake\\openpush-remake\\src\\components\\Avatar.js",[],"C:\\Users\\PC\\Desktop\\biapi openpush remake\\openpush-remake\\src\\pages\\profile\\menu.js",[],"C:\\Users\\PC\\Desktop\\biapi openpush remake\\openpush-remake\\src\\pages\\profile\\EditProfile.js",["241","242","243"],"import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport {\r\n  Grid,\r\n  Box,\r\n  Typography,\r\n  IconButton,\r\n  Button,\r\n  TextField,\r\n  FormControl,\r\n  InputLabel,\r\n  Select,\r\n  MenuItem,\r\n} from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n// Components\r\nimport Avatar from \"../../components/Avatar\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  form: {\r\n    paddingLeft: theme.spacing(5),\r\n    width: \"100%\",\r\n  },\r\n  formControl: {\r\n    marginTop: theme.spacing(2),\r\n    width: \"100%\",\r\n  },\r\n  formControlLabel: {\r\n    marginBottom: theme.spacing(1),\r\n    color: theme.palette.text.secondary,\r\n    minHeight: theme.spacing(3)\r\n  },\r\n  formgroup: {\r\n    [theme.breakpoints.down(\"md\")]: {\r\n      backgroundColor: theme.palette.background.paper,\r\n      padding: theme.spacing(2),\r\n      marginTop: theme.spacing(2),\r\n    },\r\n  },\r\n  lgUp: {\r\n\r\n    [theme.breakpoints.down(\"md\")]: {\r\n      display: \"none\",\r\n      \r\n    },\r\n  },\r\n  actionSection: {\r\n    marginTop: theme.spacing(5)\r\n  }\r\n}));\r\n\r\nfunction EditProfile(props) {\r\n  const classes = useStyles();\r\n  return (\r\n    <Grid container direction=\"column\" spacing={5}>\r\n      {/* Profile Avatar section */}\r\n      <Grid item xs={12} container>\r\n        <Grid item xs={12}>\r\n          <Box\r\n            display=\"flex\"\r\n            flexDirection=\"row\"\r\n            justifyContent=\"space-between\"\r\n            width={1}\r\n            p={3}\r\n          >\r\n            <Typography variant=\"h4\">Edit Profile</Typography>\r\n          </Box>\r\n        </Grid>\r\n        <Grid item xs={12} container spacing={2}>\r\n          <Grid item xs={4} container justify=\"center\">\r\n            <Avatar style={{ width: \"80px\", height: \"80px\" }} />\r\n          </Grid>\r\n          <Grid item xs={8} container direction=\"column\" justify=\"center\">\r\n            <Grid item>\r\n              <Button>\r\n                <Typography variant=\"body2\"> Change profile picture</Typography>\r\n              </Button>\r\n            </Grid>\r\n            <Grid item>\r\n              <Typography variant=\"caption\" color=\"textSecondary\">\r\n                PNG, JPG, up to 5MB\r\n              </Typography>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n      {/* Edit form */}\r\n      <Grid item xs={12} container>\r\n        <form className={classes.form}>\r\n          <Grid container direction=\"column\" spacing={2}>\r\n            <Grid\r\n              item\r\n              xs={12}\r\n              container\r\n              spacing={2}\r\n              className={classes.formgroup}\r\n            >\r\n              <Grid item xs={12} md={6}>\r\n                <FormControl className={classes.formControl}>\r\n                  <label className={classes.formControlLabel}>\r\n                    Change password\r\n                  </label>\r\n                  <TextField\r\n                    fullWidth\r\n                    id=\"current-password-input\"\r\n                    placeholder=\"Current password\"\r\n                    variant=\"filled\"\r\n                  />\r\n                </FormControl>\r\n              </Grid>\r\n              <Grid item xs={12} md={6}>\r\n                <FormControl className={classes.formControl}>\r\n                  <label className={classes.formControlLabel}></label>\r\n                  <TextField\r\n                    fullWidth\r\n                    id=\"new-password-input\"\r\n                    placeholder=\"New password\"\r\n                    variant=\"filled\"\r\n                  />\r\n                </FormControl>\r\n              </Grid>\r\n            </Grid>\r\n            <Grid item xs={12} container spacing={2}  className={classes.formgroup}>\r\n              <Grid item xs={12}>\r\n                <FormControl className={classes.formControl}>\r\n                  <label className={classes.formControlLabel}>\r\n                    Change Email\r\n                  </label>\r\n                  <TextField\r\n                   \r\n                    fullWidth\r\n                    id=\"email-input\"\r\n                    placeholder=\"Change Email\"\r\n                    variant=\"filled\"\r\n                  />\r\n                </FormControl>\r\n              </Grid>\r\n            </Grid>\r\n            <Grid item xs={12} container spacing={2} className={classes.formgroup}>\r\n              <Grid item xs={12} lg={4}>\r\n                <FormControl variant=\"filled\" className={classes.formControl}>\r\n                  <label className={classes.formControlLabel}>\r\n                    Default language\r\n                  </label>\r\n                  <Select\r\n                    labelId=\"language-select\"\r\n                    id=\"demo-simple-select-filled\"\r\n                    value={\"english\"}\r\n                    fullWidth\r\n                  >\r\n                    \r\n                    <MenuItem value={\"english\"}>English</MenuItem>\r\n                    <MenuItem value={\"french\"}>French</MenuItem>\r\n                  </Select>\r\n                </FormControl>\r\n              </Grid>\r\n            </Grid>\r\n            \r\n            <Grid item xs={12} container className={classes.actionSection} spacing={4} justify=\"center\">\r\n              <Grid item xs={12} md={6} container justify=\"center\">\r\n                <Button size=\"large\" fullWidth color=\"secondary\" variant=\"contained\">\r\n                  Save changes\r\n                </Button>\r\n\r\n              </Grid>\r\n              <Grid item xs={12} md={6} container justify=\"center\" className={classes.lgUp}>\r\n                \r\n                <Button size=\"large\" fullWidth color=\"primary\" variant=\"outlined\" >\r\n                  Delete account\r\n                </Button>\r\n\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n\r\nEditProfile.propTypes = {};\r\n\r\nexport default EditProfile;\r\n","C:\\Users\\PC\\Desktop\\biapi openpush remake\\openpush-remake\\src\\pages\\profile\\UpgradeLevel.js",["244"],"import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport {\r\n  Grid,\r\n  Box,\r\n  Typography,\r\n  Button,\r\n  TextField,\r\n  FormControl,\r\n  FormHelperText,\r\n  Select,\r\n  MenuItem,\r\n} from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: theme.spacing(3)\r\n  },\r\n  paddedTitle: {\r\n    paddingLeft: theme.spacing(2),\r\n  },\r\n  form: {\r\n    paddingLeft: theme.spacing(5),\r\n    width: \"100%\",\r\n  },\r\n  formControl: {\r\n    marginTop: theme.spacing(2),\r\n    width: \"100%\",\r\n    maxHeight: 50,\r\n    \"& *\": {\r\n      height: \"100%\",\r\n    },\r\n  },\r\n  formControlLabel: {\r\n    marginBottom: theme.spacing(1),\r\n    color: theme.palette.text.secondary,\r\n    width: \"100%\",\r\n  },\r\n  formgroup: {\r\n    [theme.breakpoints.down(\"md\")]: {\r\n      backgroundColor: theme.palette.background.paper,\r\n      padding: theme.spacing(2),\r\n      marginTop: theme.spacing(2),\r\n    },\r\n  },\r\n  formgroupUp: {\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      backgroundColor: theme.palette.background.paper,\r\n      padding: theme.spacing(2),\r\n      marginTop: theme.spacing(2),\r\n    },\r\n    [theme.breakpoints.up(\"lg\")]: {\r\n      backgroundColor: theme.palette.primary.light,\r\n      padding: theme.spacing(2),\r\n      marginTop: theme.spacing(2),\r\n    },\r\n  },\r\n \r\n  changeInfosContainer: {\r\n    [theme.breakpoints.up(\"lg\")]: {\r\n      justifyContent: \"flex-start\",\r\n    \r\n    },\r\n  },\r\n}));\r\n\r\nfunction UpgradeLevel(props) {\r\n  const classes = useStyles();\r\n  return (\r\n    <Grid container direction=\"column\" spacing={3} className={classes.root}>\r\n      {/*  */}\r\n      <Grid item xs={12} container spacing={4}>\r\n        <Grid item xs={12}>\r\n          <Box\r\n            display=\"flex\"\r\n            flexDirection=\"row\"\r\n            justifyContent=\"space-between\"\r\n            width={1}\r\n          >\r\n            <Typography variant=\"h4\">Upgrade Level</Typography>\r\n          </Box>\r\n        </Grid>\r\n        <Grid item xs={12} container direction=\"column\" spacing={1}>\r\n          <Box\r\n            display=\"flex\"\r\n            flexDirection=\"row\"\r\n            justifyContent=\"stretch\"\r\n            alignItems=\"center\"\r\n            width={1}\r\n          >\r\n            <img\r\n              src=\"/assets/imgs/badges/silver_medal.png\"\r\n              alt=\"\"\r\n              height={30}\r\n            />\r\n            <Typography variant=\"h5\" className={classes.paddedTitle}>\r\n              Silver Level\r\n            </Typography>\r\n          </Box>\r\n          <Grid item xs={12} container>\r\n            <Typography variant=\"caption\" color=\"textSecondary\">\r\n              Collect up to 200 000 Rabbits, 5 vouchers at the same time,\r\n              unlimited discounts and 5 000 Rabbits bonus! Now, You can spin the\r\n              wheel every 3.5 hours{\" \"}\r\n            </Typography>\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n      {/* SMS Code form */}\r\n      <Grid item xs={12} container spacing={2}>\r\n        <Grid item xs={12} container spacing={2}>\r\n          <Grid item xs={12} md={5}>\r\n            <FormControl\r\n              component={Box}\r\n              height={1}\r\n              className={classes.formControl}\r\n            >\r\n              <TextField\r\n                fullWidth\r\n                id=\"sms-code-input\"\r\n                value=\"+359 89 123 4567\"\r\n                variant=\"filled\"\r\n              />\r\n            </FormControl>\r\n          </Grid>\r\n          <Grid item xs={12} md={3}>\r\n            <FormControl\r\n              component={Box}\r\n              height={1}\r\n              className={classes.formControl}\r\n            >\r\n              <Button\r\n                size=\"large\"\r\n                fullWidth\r\n                variant=\"contained\"\r\n                color=\"secondary\"\r\n              >\r\n                Resend Code\r\n              </Button>\r\n            </FormControl>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid item xs={12} container>\r\n          <Typography variant=\"caption\" color=\"textSecondary\">\r\n            Enter you number in the following format: +359 89 123 4567 (note,\r\n            there is no \"0\" in front of your number). If you don't get the\r\n            verification code the first time, please contact the support team\r\n          </Typography>\r\n        </Grid>\r\n      </Grid>\r\n      {/* Gold Level section */}\r\n      <Grid item xs={12} container spacing={4}>\r\n        <Grid item xs={12} container direction=\"column\" spacing={1}>\r\n          <Box\r\n            display=\"flex\"\r\n            flexDirection=\"row\"\r\n            justifyContent=\"stretch\"\r\n            alignItems=\"center\"\r\n            width={1}\r\n          >\r\n            <img src=\"/assets/imgs/badges/gold_medal.png\" alt=\"\" height={30} />\r\n            <Typography variant=\"h5\" className={classes.paddedTitle}>\r\n              Gold Level\r\n            </Typography>\r\n          </Box>\r\n          <Grid item xs={12} container>\r\n            <Typography variant=\"caption\" color=\"textSecondary\">\r\n              Collect up to 250 000 Rabbits, unlimited vouchers, unlimited\r\n              discounts and 10 000 Rabbits bonus! Now, You can spin the wheel\r\n              every 3 hours!\r\n            </Typography>\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n\r\n      {/* Passport Id form */}\r\n      <Grid item xs={12} container spacing={2}>\r\n        <Grid item xs={12} container spacing={2} alignItems=\"flex-end\">\r\n          <Grid item xs={12} md={4}>\r\n            <label className={classes.formControlLabel}>Full Name</label>\r\n            <FormControl\r\n              component={Box}\r\n              height={1}\r\n              className={classes.formControl}\r\n            >\r\n              <TextField\r\n                fullWidth\r\n                id=\"fullname-input\"\r\n                value=\"Steve M\"\r\n                variant=\"filled\"\r\n              />\r\n            </FormControl>\r\n          </Grid>\r\n          <Grid item xs={12} md={4}>\r\n            <label className={classes.formControlLabel}>\r\n              Passport or ID Number (*check terms and conditions to know why)\r\n            </label>\r\n            <FormControl\r\n              component={Box}\r\n              height={1}\r\n              className={classes.formControl}\r\n            >\r\n              <TextField\r\n                fullWidth\r\n                id=\"passport-input\"\r\n                value=\"Steve M\"\r\n                variant=\"filled\"\r\n              />\r\n            </FormControl>\r\n          </Grid>\r\n          <Grid item xs={12} md={4}>\r\n            <FormControl\r\n              component={Box}\r\n              height={1}\r\n              className={classes.formControl}\r\n            >\r\n              <Button\r\n                size=\"large\"\r\n                fullWidth\r\n                variant=\"contained\"\r\n                color=\"secondary\"\r\n              >\r\n                Change\r\n              </Button>\r\n            </FormControl>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid item xs={12} container>\r\n          <Typography variant=\"caption\" color=\"textSecondary\">\r\n            Enter you number in the following format: +359 89 123 4567 (note,\r\n            there is no \"0\" in front of your number). If you don't get the\r\n            verification code the first time, please contact the support team\r\n          </Typography>\r\n        </Grid>\r\n      </Grid>\r\n\r\n\r\n      {/* Additional infos section */}\r\n      <Grid item xs={12} container>\r\n          {/* Edit Infos form */}\r\n          <Grid item xs={12} container className={classes.formgroupUp} spacing={3}>\r\n            <Grid item xs={12} container direction=\"column\" spacing={1}>\r\n              <Typography variant=\"h5\"> Additional Information </Typography>\r\n              <Typography variant=\"caption\" color=\"textSecondary\">\r\n                Get more rabbits by filling in the following information\r\n              </Typography>\r\n            </Grid>\r\n            <Grid item xs={12} container direction=\"column\" spacing={1}>\r\n              <Grid item xs={12} container spacing={2} alignItems=\"flex-end\">\r\n                <Grid item xs={4}>\r\n                  <label className={classes.formControlLabel}>Date of birth</label>\r\n                  <FormControl\r\n                    component={Box}\r\n                    height={1}\r\n                    className={classes.formControl}\r\n                  >\r\n                    <Select labelId=\"language-select\" id=\"year-input\" value=\"year\">\r\n                      <MenuItem disabled value=\"year\">\r\n                        Year\r\n                      </MenuItem>\r\n                      <MenuItem value={10}>Ten</MenuItem>\r\n                      <MenuItem value={20}>Twenty</MenuItem>\r\n                      <MenuItem value={30}>Thirty</MenuItem>\r\n                    </Select>\r\n                  </FormControl>\r\n                </Grid>\r\n                <Grid item xs={4}>\r\n                  <FormControl\r\n                    component={Box}\r\n                    height={1}\r\n                    className={classes.formControl}\r\n                  >\r\n                    <Select\r\n                      labelId=\"language-select\"\r\n                      id=\"month-input\"\r\n                      value=\"month\"\r\n                    >\r\n                      <MenuItem disabled value=\"month\">\r\n                        Month\r\n                      </MenuItem>\r\n                      <MenuItem value={10}>Ten</MenuItem>\r\n                      <MenuItem value={20}>Twenty</MenuItem>\r\n                      <MenuItem value={30}>Thirty</MenuItem>\r\n                    </Select>\r\n                  </FormControl>\r\n                </Grid>\r\n                <Grid item xs={4}>\r\n                  <FormControl\r\n                    component={Box}\r\n                    height={1}\r\n                    className={classes.formControl}\r\n                  >\r\n                    <Select labelId=\"language-select\" id=\"day-input\" value=\"day\">\r\n                      <MenuItem disabled value=\"day\">\r\n                        Day\r\n                      </MenuItem>\r\n                      <MenuItem value={10}>Ten</MenuItem>\r\n                      <MenuItem value={20}>Twenty</MenuItem>\r\n                      <MenuItem value={30}>Thirty</MenuItem>\r\n                    </Select>\r\n                  </FormControl>\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n            <Grid item xs={12} container>\r\n              <FormHelperText>Fill it and get 2000 Rabbits</FormHelperText>\r\n            </Grid>\r\n            <Grid item xs={12} container direction=\"column\" spacing={1}>\r\n              <Grid item xs={12} container spacing={2} alignItems=\"flex-end\">\r\n                <Grid item xs={12}>\r\n                  <label className={classes.formControlLabel}>Gender</label>\r\n                  <FormControl\r\n                    component={Box}\r\n                    height={1}\r\n                    className={classes.formControl}\r\n                  >\r\n                    <Select\r\n                      labelId=\"language-select\"\r\n                      id=\"gender-input\"\r\n                      value=\"male\"\r\n                      fullWidth\r\n                    >\r\n                      <MenuItem disabled value=\"male\">\r\n                        Male\r\n                      </MenuItem>\r\n                      <MenuItem value={\"female\"}>Female</MenuItem>\r\n                    </Select>\r\n                  </FormControl>\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n            <Grid item xs={12} container>\r\n              <FormHelperText>Fill it and get 2000 Rabbits</FormHelperText>\r\n            </Grid>\r\n            <Grid item xs={12} container justify=\"center\" className={classes.changeInfosContainer}>\r\n              <Grid item xs={12} md={4} container justify=\"center\">\r\n                <Button size=\"large\" fullWidth variant=\"contained\" color=\"secondary\">\r\n                  Change\r\n                </Button>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n\r\n      </Grid>\r\n\r\n    </Grid>\r\n  );\r\n}\r\n\r\nUpgradeLevel.propTypes = {};\r\n\r\nexport default UpgradeLevel;\r\n","C:\\Users\\PC\\Desktop\\biapi openpush remake\\openpush-remake\\src\\pages\\profile\\SocialConnection.js",["245","246"],"import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport {\r\n  Grid,\r\n  Box,\r\n  Typography,\r\n  List,\r\n  ListItem,\r\n  ListItemIcon,\r\n  ListItemText,\r\n  Switch\r\n} from \"@material-ui/core\";\r\nimport { makeStyles,withStyles } from \"@material-ui/core/styles\";\r\n//Icons\r\nimport RightArrow from \"@material-ui/icons/ArrowForwardIosOutlined\";\r\nimport { ReactComponent as WhatsAppIcon } from '../../imgs/social/whatsapp_logo.svg';\r\nimport { ReactComponent as TwitterIcon } from '../../imgs/social/twitter_logo.svg';\r\nimport { ReactComponent as FacebookIcon } from '../../imgs/social/facebook_logo.svg';\r\nimport { ReactComponent as WechatIcon } from '../../imgs/social/wechat_logo.svg';\r\nimport { ReactComponent as AppleIcon } from '../../imgs/social/apple_logo.svg';\r\nimport { ReactComponent as ViberIcon } from '../../imgs/social/viber_logo.svg';\r\nimport { useState } from \"react\";\r\n\r\nconst Menu =[\r\n  {\r\n    id: 'whatsapp',\r\n    icon: <WhatsAppIcon/>,\r\n    linked: true\r\n  },\r\n  {\r\n    id: 'twitter',\r\n    icon:<TwitterIcon/> ,\r\n    linked: false\r\n  },\r\n  {\r\n    id: 'facebook',\r\n    icon:<FacebookIcon/> ,\r\n    linked: true\r\n  },\r\n  {\r\n    id: 'wechat',\r\n    icon:<WechatIcon/> ,\r\n    linked: false\r\n  },\r\n  {\r\n    id: 'apple',\r\n    icon:<AppleIcon/> ,\r\n    linked: false\r\n  },\r\n  {\r\n    id: 'viber',\r\n    icon: <ViberIcon/>,\r\n    linked: false\r\n  },\r\n\r\n];\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: theme.spacing(5),\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      padding: 0,\r\n     \r\n    },\r\n\r\n  },\r\n  list: {\r\n    width: \"100%\",\r\n    marginTop: theme.spacing(2)\r\n   \r\n  },\r\n  listItem: {\r\n    backgroundColor: theme.palette.grey[700],\r\n    textTransform: \"capitalize\",\r\n    borderRadius: '5px 5px 5px 5px',\r\n    margin: '1px',\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      borderRadius: 0,\r\n     \r\n    },\r\n    \r\n  },\r\n}));\r\n\r\nconst IOSSwitch = withStyles((theme) => ({\r\n  root: {\r\n    width: 42,\r\n    height: 26,\r\n    padding: 0,\r\n    margin: theme.spacing(1),\r\n  },\r\n  switchBase: {\r\n    padding: 1,\r\n    '&$checked': {\r\n      transform: 'translateX(16px)',\r\n      color: theme.palette.common.white,\r\n      '& + $track': {\r\n        backgroundColor: '#52d869',\r\n        opacity: 1,\r\n        border: 'none',\r\n      },\r\n    },\r\n    '&$focusVisible $thumb': {\r\n      color: '#52d869',\r\n      border: '6px solid #fff',\r\n    },\r\n  },\r\n  thumb: {\r\n    width: 24,\r\n    height: 24,\r\n  },\r\n  track: {\r\n    borderRadius: 26 / 2,\r\n    border: `1px solid ${theme.palette.grey[400]}`,\r\n    backgroundColor: theme.palette.grey[50],\r\n    opacity: 1,\r\n    transition: theme.transitions.create(['background-color', 'border']),\r\n  },\r\n  checked: {},\r\n  focusVisible: {},\r\n}))(({ classes, ...props }) => {\r\n  return (\r\n    <Switch\r\n      focusVisibleClassName={classes.focusVisible}\r\n      disableRipple\r\n      classes={{\r\n        root: classes.root,\r\n        switchBase: classes.switchBase,\r\n        thumb: classes.thumb,\r\n        track: classes.track,\r\n        checked: classes.checked,\r\n      }}\r\n      {...props}\r\n    />\r\n  );\r\n});\r\n\r\n\r\n\r\nfunction SocialConnection(props) {\r\n  const classes = useStyles();\r\n  const [socialSwitches,setSocialSwitches]=useState(\r\n    Object.assign({},...(Menu.map(el=>({[el.id]: el.linked}))))\r\n  )\r\n\r\n  const updateSocialState=(e)=>{\r\n    setSocialSwitches({\r\n      ...socialSwitches,\r\n      [e.target.name]: e.target.checked\r\n    })\r\n    if(e.target.checked) alert(`Link with your ${e.target.name} account`)\r\n  }\r\n  return (\r\n    <Grid container direction=\"column\" className={classes.root}>\r\n      {/* Head section */}\r\n      <Grid item xs={12} container>\r\n        <Grid item xs={12}>\r\n          <Box\r\n            display=\"flex\"\r\n            flexDirection=\"row\"\r\n            justifyContent=\"space-between\"\r\n            width={1}\r\n          >\r\n            <Typography variant=\"h4\">Social connection</Typography>\r\n            \r\n          </Box>\r\n        </Grid>\r\n        \r\n      </Grid>\r\n      {/* Social media menu section */}\r\n      <Grid item xs={12} container>\r\n        <List\r\n          component=\"nav\"\r\n          aria-labelledby=\"nested-list-subheader\"\r\n          className={classes.list}\r\n        >\r\n          {Menu && Menu.map((item, idx) => (\r\n            <ListItem button key={idx} className={classes.listItem}>\r\n              <ListItemIcon>{item.icon}</ListItemIcon>\r\n              <ListItemText primary={item.id} />\r\n              <IOSSwitch  name={`${item.id}`}  onChange={updateSocialState} />\r\n            </ListItem>\r\n          ))}\r\n        </List>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n\r\nSocialConnection.propTypes = {};\r\n\r\nexport default SocialConnection;\r\n","C:\\Users\\PC\\Desktop\\biapi openpush remake\\openpush-remake\\src\\pages\\profile\\Settings.js",["247"],"import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport {\r\n  Grid,\r\n  Box,\r\n  Typography,\r\n  Button,\r\n  List,\r\n  ListItem,\r\n  ListItemText,\r\n  FormControl,\r\n  Select,\r\n  MenuItem,\r\n} from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { createMuiTheme, ThemeProvider } from \"@material-ui/core/styles\";\r\n\r\nimport successFailTheme from \"../../themes/success-fail\";\r\n//Compoennts\r\nimport SimpleRadio from \"../../components/SimpleRadio\";\r\n\r\nconst Menu = [\r\n  {\r\n    id: \"Food & drinks\",\r\n    choosen: true,\r\n  },\r\n  {\r\n    id: \"Health and Beauty\",\r\n    choosen: true,\r\n  },\r\n  {\r\n    id: \"Sports and Hobbies\",\r\n    choosen: true,\r\n  },\r\n  {\r\n    id: \"Children\",\r\n    choosen: false,\r\n  },\r\n  {\r\n    id: \"For home, garden and pets\",\r\n    choosen: false,\r\n  },\r\n  {\r\n    id: \"Restaurants\",\r\n    choosen: true,\r\n  },\r\n  {\r\n    id: \"Entertainment\",\r\n    choosen: false,\r\n  },\r\n  {\r\n    id: \"Auto\",\r\n    choosen: false,\r\n  },\r\n  {\r\n    id: \"Transportation\",\r\n    choosen: false,\r\n  },\r\n];\r\n\r\nconst theme = createMuiTheme(successFailTheme);\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: theme.spacing(5),\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      padding: 0,\r\n    },\r\n  },\r\n  section: {\r\n    marginTop: theme.spacing(4),\r\n  },\r\n  list: {\r\n    width: \"100%\",\r\n    marginTop: theme.spacing(2),\r\n  },\r\n  listItem: {\r\n    backgroundColor: theme.palette.grey[700],\r\n    textTransform: \"capitalize\",\r\n    borderRadius: \"5px 5px 5px 5px\",\r\n    margin: \"1px\",\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      borderRadius: 0,\r\n    },\r\n  },\r\n  formControl: {\r\n    marginTop: theme.spacing(2),\r\n    width: \"100%\",\r\n    minHeight: 30,\r\n    maxHeight: 50,\r\n    backgroundColor: theme.palette.background.paper,\r\n    // \"& *\": {\r\n    //   height: \"100%\",\r\n    // },\r\n  },\r\n  formControlLabel: {\r\n    marginBottom: theme.spacing(1),\r\n    color: theme.palette.text.secondary,\r\n    width: \"100%\",\r\n  },\r\n}));\r\n\r\nfunction Settings(props) {\r\n  const classes = useStyles();\r\n  const [categoriesRadios, setCategoriesRadios] = useState(\r\n    Object.assign({}, ...Menu.map((el) => ({ [el.id]: el.choosen })))\r\n  );\r\n\r\n  const updateCategoriesState = (e) => {\r\n    setCategoriesRadios({\r\n      ...categoriesRadios,\r\n      [e.target.name]: !categoriesRadios[e.target.name],\r\n    });\r\n    console.log(categoriesRadios);\r\n    // if(e.target.checked) alert(`Link with your ${e.target.name} account`)\r\n  };\r\n  return (\r\n    <Grid container direction=\"row\" className={classes.root} spacing={4}>\r\n      {/* Head section */}\r\n      <Grid item xs={12} container>\r\n        <Grid item xs={12}>\r\n          <Box\r\n            display=\"flex\"\r\n            flexDirection=\"row\"\r\n            justifyContent=\"space-between\"\r\n            width={1}\r\n          >\r\n            <Typography variant=\"h4\">Settings</Typography>\r\n          </Box>\r\n        </Grid>\r\n      </Grid>\r\n      {/* Categories menu section */}\r\n      <Grid item xs={12} container>\r\n        <ThemeProvider theme={theme}>\r\n          <List\r\n            component=\"nav\"\r\n            aria-labelledby=\"nested-list-subheader\"\r\n            className={classes.list}\r\n          >\r\n            {Menu &&\r\n              Menu.map((item, idx) => (\r\n                <ListItem button key={idx} className={classes.listItem}>\r\n                  <ListItemText primary={item.id} />\r\n                  <SimpleRadio\r\n                    name={item.id}\r\n                    checked={categoriesRadios[item.id]}\r\n                    onClick={updateCategoriesState}\r\n                  />\r\n                </ListItem>\r\n              ))}\r\n          </List>\r\n        </ThemeProvider>\r\n      </Grid>\r\n      {/* Theme selection section */}\r\n      <Grid item xs={12} container className={classes.section}>\r\n        <Grid item xs={12}>\r\n          <label className={classes.formControlLabel}>Choose theme</label>\r\n          <FormControl className={classes.formControl}>\r\n            <Select\r\n              labelId=\"theme-select\"\r\n              id=\"theme-input\"\r\n              value=\"dark\"\r\n              variant=\"filled\"\r\n            >\r\n              <MenuItem value=\"dark\">Dark</MenuItem>\r\n              <MenuItem value={\"default\"}>Default</MenuItem>\r\n            </Select>\r\n          </FormControl>\r\n        </Grid>\r\n      </Grid>\r\n      <Grid item container xs={12}>\r\n        <Grid item xs={12} container className={classes.section} spacing={4}>\r\n          <Grid item xs={12} md={6} container justify=\"center\">\r\n            <Button\r\n              size=\"large\"\r\n              fullWidth\r\n              color=\"secondary\"\r\n              variant=\"contained\"\r\n            >\r\n              Save changes\r\n            </Button>\r\n          </Grid>\r\n          \r\n        </Grid>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n\r\nSettings.propTypes = {};\r\n\r\nexport default Settings;\r\n","C:\\Users\\PC\\Desktop\\biapi openpush remake\\openpush-remake\\src\\components\\SimpleRadio.js",[],"C:\\Users\\PC\\Desktop\\biapi openpush remake\\openpush-remake\\src\\pages\\FAQ.js",["248","249"],"import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Grid, Box, Typography } from \"@material-ui/core\";\r\nimport MuiAccordion from \"@material-ui/core/Accordion\";\r\nimport MuiAccordionSummary from \"@material-ui/core/AccordionSummary\";\r\nimport AccordionDetails from \"@material-ui/core/AccordionDetails\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport RemoveIcon from '@material-ui/icons/Remove';\r\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\r\n//Icons\r\n\r\nconst Menu = [\r\n  {\r\n    title: \"What is Open Push?\",\r\n    body:\r\n      \"Open Push is a platform containing vouchers, discounts and products which everyone can redeem in exchange of Golden Rabbits. Golden Rabbits can be won absolutely free, which makes the platform one of a kind. You don`t pay anything, you can only win. Periodically, you will receive push notifications with hot offers from the platform ready to be redeemed in exchange of Golden Rabbits.\",\r\n  },\r\n  {\r\n    title: \"What are the ways to win Golden Rabbits?\",\r\n    body: \"I actualy have no idea\",\r\n  },\r\n  {\r\n    title: \"Why you should accept to receive push notifications?\",\r\n    body: true,\r\n  },\r\n  {\r\n    title:\r\n      \"How to connect your Sweet Clash account with your Open Push account?\",\r\n    body: \"I actualy have no idea\",\r\n  },\r\n  {\r\n    title:\r\n      \"How to connect your Sweet Clash account with your Open Push account? How to connect your Sweet Clash account with your Open Push accountHow to connect your Sweet Clash account with your Open Push account?\",\r\n    body: \"I actualy have no idea\",\r\n  },\r\n  {\r\n    title:\r\n      \"How to connect your Sweet Clash account with your Open Push account? How to connect your Sweet Clash account with your Open Push account?\",\r\n    linked: \"I actualy have no idea\",\r\n  },\r\n];\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: theme.spacing(5),\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      padding: 0,\r\n    },\r\n  },\r\n\r\n  accordion: {\r\n    // backgroundColor: theme.palette.grey[700],\r\n    width: \"100%\",\r\n    textTransform: \"capitalize\",\r\n    borderRadius: \"5px 5px 5px 5px\",\r\n    margin: \"1px\",\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      borderRadius: 0,\r\n    },\r\n  },\r\n  expendIcon: {\r\n    color: theme.palette.secondary.main\r\n  }\r\n}));\r\n\r\n\r\nconst Accordion = withStyles({\r\n  root: {\r\n    border: '1px solid rgba(0, 0, 0, .125)',\r\n    boxShadow: 'none',\r\n    '&:not(:last-child)': {\r\n      borderBottom: 0,\r\n    },\r\n    '&:before': {\r\n      display: 'none',\r\n    },\r\n    '&$expanded': {\r\n      margin: 'auto',\r\n    },\r\n  },\r\n  expanded: {},\r\n})(MuiAccordion);\r\n\r\nconst AccordionSummary = withStyles({\r\n  root: {\r\n    backgroundColor: 'rgba(0, 0, 0, .03)',\r\n    borderBottom: '1px solid rgba(0, 0, 0, .125)',\r\n    marginBottom: -1,\r\n    minHeight: 56,\r\n    '&$expanded': {\r\n      minHeight: 56,\r\n    },\r\n  },\r\n  content: {\r\n    '&$expanded': {\r\n      margin: '12px 0',\r\n    },\r\n  },\r\n  expanded: {},\r\n})(MuiAccordionSummary);\r\n\r\nfunction FAQ(props) {\r\n  const classes = useStyles();\r\n  const [socialSwitches, setSocialSwitches] = useState(\r\n    Object.assign({}, ...Menu.map((el) => ({ [el.id]: el.linked })))\r\n  );\r\n  const [expanded, setExpanded] = React.useState('panel1');\r\n  const handleChange = (panel) => (event, newExpanded) => {\r\n    setExpanded(newExpanded ? panel : false);\r\n  };\r\n\r\n\r\n  const updateSocialState = (e) => {\r\n    setSocialSwitches({\r\n      ...socialSwitches,\r\n      [e.target.name]: e.target.checked,\r\n    });\r\n    if (e.target.checked) alert(`Link with your ${e.target.name} account`);\r\n  };\r\n  return (\r\n    <Grid container direction=\"column\" className={classes.root}>\r\n      {/* Head section */}\r\n      <Grid item xs={12} container>\r\n        <Grid item xs={12}>\r\n          <Box\r\n            display=\"flex\"\r\n            flexDirection=\"row\"\r\n            justifyContent=\"space-between\"\r\n            width={1}\r\n          >\r\n            <Typography variant=\"h4\">FAQ</Typography>\r\n          </Box>\r\n        </Grid>\r\n      </Grid>\r\n      {/* Social media menu section */}\r\n      <Grid item xs={12} container>\r\n        {\r\n          Menu.map((el,idx)=>(\r\n        //   <Accordion className={classes.accordion}>\r\n        //   <AccordionSummary\r\n        //     expandIcon={<AddIcon className={classes.expendIcon} />}\r\n        //     aria-label=\"Expand\"\r\n        //     aria-controls=\"additional-actions1-content\"\r\n        //     id={`accordion-item-${idx}`}\r\n        //   >\r\n        //     <Typography>\r\n        //       {\" \"}\r\n        //       {el.title}\r\n        //     </Typography>\r\n        //   </AccordionSummary>\r\n        //   <AccordionDetails>\r\n        //     <Typography color=\"textSecondary\">\r\n        //       {el.body}\r\n        //     </Typography>\r\n        //   </AccordionDetails>\r\n        // </Accordion>\r\n        <Accordion key={idx} square expanded={expanded === el.title} onChange={handleChange(el.title)} className={classes.accordion}>\r\n        <AccordionSummary aria-controls=\"panel1d-content\" id=\"panel1d-header\" \r\n        expandIcon={expanded === el.title?<RemoveIcon className={classes.expendIcon}/>:<AddIcon className={classes.expendIcon}/>}>\r\n          <Typography>{el.title}</Typography>\r\n        </AccordionSummary>\r\n        <AccordionDetails>\r\n          <Typography>\r\n            {el.body}\r\n          </Typography>\r\n        </AccordionDetails>\r\n      </Accordion>\r\n          ))}\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n\r\nFAQ.propTypes = {};\r\n\r\nexport default FAQ;\r\n","C:\\Users\\PC\\Desktop\\biapi openpush remake\\openpush-remake\\src\\pages\\navbar\\auth-top-bar.js",["250","251","252","253"],"import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport {\r\n  AppBar as TopBar,\r\n  Toolbar,\r\n  Typography,\r\n  Button,\r\n  Box,\r\n  IconButton,\r\n} from \"@material-ui/core\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport { makeStyles,useTheme,ThemeProvider } from \"@material-ui/core/styles\";\r\nimport { isWidthDown, isWidthUp } from \"@material-ui/core/withWidth\";\r\n\r\n// Components\r\nimport NavTabs from \"../../components/NavTabs\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  topAppBar: {\r\n    flexGrow: 1,\r\n  },\r\n  bottomAppBar: {\r\n    top: \"auto\",\r\n    // position: 'fixed',\r\n    bottom: 0,\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  navs: {\r\n    justifySelf: \"center\",\r\n    alignSelf: \"center\",\r\n    width:  \"100%\"\r\n  },\r\n  rabbitsContainer: {\r\n      maxHeight: \"100%\",\r\n      \r\n\r\n  },\r\n  rabbitsImg: {\r\n      maxHeight: \"80%\",\r\n      marginLeft: theme.spacing(2)\r\n  }\r\n}));\r\n\r\nfunction AppBar(props) {\r\n    const {theme}=props\r\n    console.log(theme)\r\n  const classes = useStyles(theme);\r\n\r\n  const [open, setOpen] = useState(false);\r\n\r\n  return (\r\n    <>\r\n    <ThemeProvider theme={theme}>\r\n      <div className={classes.topAppBar}>\r\n        <TopBar position=\"static\">\r\n          <Toolbar >\r\n            <IconButton\r\n              edge=\"start\"\r\n              className={classes.menuButton}\r\n              color=\"inherit\"\r\n              aria-label=\"menu\"\r\n            >\r\n              <MenuIcon />\r\n            </IconButton>\r\n            <div className={classes.title}>\r\n              <img src=\"/assets/imgs/toolbar_logo.png\" alt=\"\" />\r\n            </div>\r\n            <div className={classes.navs}>\r\n                {isWidthUp(\"md\", props.width) && <NavTabs />}\r\n            </div>\r\n            <Box display=\"flex\" flexDirection=\"row\" alignItems=\"center\" className={classes.rabbitsContainer}>\r\n                <Typography>\r\n                    {props.user.rabbits|| \"28 000\"}\r\n                    \r\n\r\n                </Typography>\r\n                <img  src=\"/assets/dummy/main/rabbit.png\" alt=\"Rabbits\" className={classes.rabbitsImg} />\r\n            </Box>\r\n          </Toolbar>\r\n        </TopBar>\r\n      </div>\r\n      {isWidthDown(\"sm\", props.width) && (\r\n        <div>\r\n          <TopBar\r\n            position=\"fixed\"\r\n            color=\"primary\"\r\n            className={classes.bottomAppBar}\r\n          >\r\n            <Toolbar>\r\n              \r\n              <Box display=\"flex\" flexDirection=\"row\" alignItems=\"end\" justifyContent=\"center\" width={1}>\r\n                <NavTabs />\r\n            </Box>\r\n            </Toolbar>\r\n          </TopBar>\r\n        </div>\r\n      )}\r\n      </ThemeProvider>\r\n    </>\r\n  );\r\n}\r\n\r\nAppBar.propTypes = {\r\n  width: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default AppBar;\r\n","C:\\Users\\PC\\Desktop\\biapi openpush remake\\openpush-remake\\src\\components\\NavTabs.js",["254"],"import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { ReactComponent as HomeIcon } from \"../imgs/icons/nav/home.svg\";\r\nimport { ReactComponent as CategoriesIcon } from \"../imgs/icons/nav/categories.svg\";\r\nimport { ReactComponent as WheelIcon } from \"../imgs/icons/nav/wheel.svg\";\r\nimport { ReactComponent as WalletIcon } from \"../imgs/icons/nav/wallet.svg\";\r\nimport { ReactComponent as ProfileIcon } from \"../imgs/icons/nav/profile.svg\";\r\n\r\nimport navItems from \"../static/nav\";\r\nconst navIcons = [\r\n  <HomeIcon />,\r\n  <CategoriesIcon />,\r\n  <WheelIcon />,\r\n  <WalletIcon />,\r\n  <ProfileIcon />,\r\n];\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    \r\n  },\r\n  navLink: {\r\n    textTransform: \"capitalize\",\r\n  },\r\n}));\r\n\r\nfunction NavTabs(props) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Box\r\n      className={classes.root}\r\n      display=\"flex\"\r\n      flexDirection=\"row\"\r\n      justifyContent=\"center\"\r\n      alignItems=\"center\"\r\n    >\r\n      {navItems.map((item, idx) => (\r\n        <Link\r\n          key={idx}\r\n          underline=\"none\"\r\n          href={item.link}\r\n          className={classes.navLink}\r\n        >\r\n          <Box\r\n            display=\"flex\"\r\n            flexDirection=\"column\"\r\n            justifyContent=\"center\"\r\n            alignItems=\"center\"\r\n          >\r\n            {navIcons[idx]}\r\n            {item.title}\r\n          </Box>\r\n        </Link>\r\n      ))}\r\n    </Box>\r\n  );\r\n}\r\n\r\nNavTabs.propTypes = {};\r\n\r\nexport default NavTabs;\r\n","C:\\Users\\PC\\Desktop\\biapi openpush remake\\openpush-remake\\src\\static\\nav.js",[],"C:\\Users\\PC\\Desktop\\biapi openpush remake\\openpush-remake\\src\\redux\\store.js",[],"C:\\Users\\PC\\Desktop\\biapi openpush remake\\openpush-remake\\src\\redux\\reducers\\index.js",[],"C:\\Users\\PC\\Desktop\\biapi openpush remake\\openpush-remake\\src\\redux\\reducers\\user.js",[],"C:\\Users\\PC\\Desktop\\biapi openpush remake\\openpush-remake\\src\\data\\user.js",[],"C:\\Users\\PC\\Desktop\\biapi openpush remake\\openpush-remake\\src\\redux\\actions\\user-actions.js",[],{"ruleId":"255","replacedBy":"256"},{"ruleId":"257","replacedBy":"258"},{"ruleId":"259","severity":1,"message":"260","line":45,"column":5,"nodeType":"261","endLine":45,"endColumn":22,"suggestions":"262"},{"ruleId":"263","severity":1,"message":"264","line":2,"column":8,"nodeType":"265","messageId":"266","endLine":2,"endColumn":17},{"ruleId":"263","severity":1,"message":"264","line":2,"column":8,"nodeType":"265","messageId":"266","endLine":2,"endColumn":17},{"ruleId":"263","severity":1,"message":"267","line":10,"column":3,"nodeType":"265","messageId":"266","endLine":10,"endColumn":13},{"ruleId":"263","severity":1,"message":"264","line":3,"column":8,"nodeType":"265","messageId":"266","endLine":3,"endColumn":17},{"ruleId":"263","severity":1,"message":"264","line":2,"column":8,"nodeType":"265","messageId":"266","endLine":2,"endColumn":17},{"ruleId":"263","severity":1,"message":"264","line":2,"column":8,"nodeType":"265","messageId":"266","endLine":2,"endColumn":17},{"ruleId":"263","severity":1,"message":"264","line":2,"column":8,"nodeType":"265","messageId":"266","endLine":2,"endColumn":17},{"ruleId":"263","severity":1,"message":"268","line":27,"column":10,"nodeType":"265","messageId":"266","endLine":27,"endColumn":18},{"ruleId":"263","severity":1,"message":"269","line":47,"column":7,"nodeType":"265","messageId":"266","endLine":47,"endColumn":15},{"ruleId":"263","severity":1,"message":"270","line":54,"column":7,"nodeType":"265","messageId":"266","endLine":54,"endColumn":16},{"ruleId":"263","severity":1,"message":"264","line":2,"column":8,"nodeType":"265","messageId":"266","endLine":2,"endColumn":17},{"ruleId":"263","severity":1,"message":"264","line":2,"column":8,"nodeType":"265","messageId":"266","endLine":2,"endColumn":17},{"ruleId":"263","severity":1,"message":"271","line":9,"column":3,"nodeType":"265","messageId":"266","endLine":9,"endColumn":12},{"ruleId":"263","severity":1,"message":"272","line":117,"column":16,"nodeType":"265","messageId":"266","endLine":117,"endColumn":23},{"ruleId":"263","severity":1,"message":"273","line":6,"column":3,"nodeType":"265","messageId":"266","endLine":6,"endColumn":12},{"ruleId":"259","severity":1,"message":"274","line":80,"column":7,"nodeType":"261","endLine":80,"endColumn":9,"suggestions":"275"},{"ruleId":"263","severity":1,"message":"273","line":5,"column":3,"nodeType":"265","messageId":"266","endLine":5,"endColumn":12},{"ruleId":"263","severity":1,"message":"264","line":2,"column":8,"nodeType":"265","messageId":"266","endLine":2,"endColumn":17},{"ruleId":"263","severity":1,"message":"276","line":3,"column":36,"nodeType":"265","messageId":"266","endLine":3,"endColumn":40},{"ruleId":"263","severity":1,"message":"277","line":5,"column":8,"nodeType":"265","messageId":"266","endLine":5,"endColumn":18},{"ruleId":"263","severity":1,"message":"264","line":2,"column":8,"nodeType":"265","messageId":"266","endLine":2,"endColumn":17},{"ruleId":"263","severity":1,"message":"267","line":8,"column":3,"nodeType":"265","messageId":"266","endLine":8,"endColumn":13},{"ruleId":"263","severity":1,"message":"264","line":2,"column":8,"nodeType":"265","messageId":"266","endLine":2,"endColumn":17},{"ruleId":"263","severity":1,"message":"264","line":2,"column":8,"nodeType":"265","messageId":"266","endLine":2,"endColumn":17},{"ruleId":"263","severity":1,"message":"264","line":2,"column":8,"nodeType":"265","messageId":"266","endLine":2,"endColumn":17},{"ruleId":"263","severity":1,"message":"267","line":7,"column":3,"nodeType":"265","messageId":"266","endLine":7,"endColumn":13},{"ruleId":"263","severity":1,"message":"278","line":11,"column":3,"nodeType":"265","messageId":"266","endLine":11,"endColumn":13},{"ruleId":"263","severity":1,"message":"264","line":2,"column":8,"nodeType":"265","messageId":"266","endLine":2,"endColumn":17},{"ruleId":"263","severity":1,"message":"264","line":2,"column":8,"nodeType":"265","messageId":"266","endLine":2,"endColumn":17},{"ruleId":"263","severity":1,"message":"279","line":15,"column":8,"nodeType":"265","messageId":"266","endLine":15,"endColumn":18},{"ruleId":"263","severity":1,"message":"264","line":2,"column":8,"nodeType":"265","messageId":"266","endLine":2,"endColumn":17},{"ruleId":"263","severity":1,"message":"264","line":2,"column":8,"nodeType":"265","messageId":"266","endLine":2,"endColumn":17},{"ruleId":"263","severity":1,"message":"280","line":112,"column":9,"nodeType":"265","messageId":"266","endLine":112,"endColumn":26},{"ruleId":"263","severity":1,"message":"281","line":7,"column":3,"nodeType":"265","messageId":"266","endLine":7,"endColumn":9},{"ruleId":"263","severity":1,"message":"282","line":12,"column":21,"nodeType":"265","messageId":"266","endLine":12,"endColumn":29},{"ruleId":"263","severity":1,"message":"283","line":54,"column":10,"nodeType":"265","messageId":"266","endLine":54,"endColumn":14},{"ruleId":"263","severity":1,"message":"284","line":54,"column":16,"nodeType":"265","messageId":"266","endLine":54,"endColumn":23},{"ruleId":"263","severity":1,"message":"264","line":2,"column":8,"nodeType":"265","messageId":"266","endLine":2,"endColumn":17},"no-native-reassign",["285"],"no-negated-in-lhs",["286"],"react-hooks/exhaustive-deps","React Hook React.useMemo has an unnecessary dependency: 'prefersDarkMode'. Either exclude it or remove the dependency array.","ArrayExpression",["287"],"no-unused-vars","'PropTypes' is defined but never used.","Identifier","unusedVar","'IconButton' is defined but never used.","'TabPanel' is defined but never used.","'tabprops' is assigned a value but never used.","'tabTitles' is assigned a value but never used.","'TextField' is defined but never used.","'setPage' is assigned a value but never used.","'CardMedia' is defined but never used.","React Hook useEffect has a missing dependency: 'deadLine'. Either include it or remove the dependency array.",["288"],"'Link' is defined but never used.","'FluidImage' is defined but never used.","'InputLabel' is defined but never used.","'RightArrow' is defined but never used.","'updateSocialState' is assigned a value but never used.","'Button' is defined but never used.","'useTheme' is defined but never used.","'open' is assigned a value but never used.","'setOpen' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"289","fix":"290"},{"desc":"291","fix":"292"},"Update the dependencies array to be: []",{"range":"293","text":"294"},"Update the dependencies array to be: [deadLine]",{"range":"295","text":"296"},[1021,1038],"[]",[2050,2052],"[deadLine]"]